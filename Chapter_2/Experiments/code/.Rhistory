data = all_r, start = list(r_tref=B0, e=Ea, eh=Eh, th=Th),
control = list(maxiter = 500))
}else{
fit <- nlsLM(W03~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = all_r, start = list(r_tref=B0, e=Ea, eh=Eh, th=Th),
control = list(maxiter = 500))
}
bootresult <-  Boot(fit, method = 'case')
# png(filename = paste("../results/TPC/", sp[s], "_TPC_a_boot.png", sep = ""), width = 960, height = 960)
# hist(bootresult, layout = c(2,2))
# graphics.off()
sub <- data.frame(N = all_r[,s], temp = all_r$temp)
d_fit <- nest(sub, data = c(temp, N)) %>%
mutate(sharpeschoolhigh = map(data, ~nlsLM(N~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = .x, start = list(r_tref=B0, e=Ea, eh=Eh, th=Th),
control = list(maxiter = 500))),
# create new temperature data
new_data = map(data, ~tibble(temp = seq(min(.x$temp), max(.x$temp), length.out = 100))),
# predict over that data,
preds =  map2(sharpeschoolhigh, new_data, ~augment(.x, newdata = .y)))
# unnest predictions
d_preds <- select(d_fit, preds) %>%
unnest(preds)
boot1_preds <- bootresult$t %>%
as.data.frame() %>%
drop_na() %>%
mutate(iter = 1:n()) %>%
group_by_all() %>%
do(data.frame(temp = seq(min(all_r$temp), max(all_r$temp), length.out = 100))) %>%
ungroup() %>%
mutate(pred = sharpeschoolhigh_1981(temp, r_tref, e, eh, th, tref = 12))
# calculate bootstrapped confidence intervals
boot1_conf_preds <- group_by(boot1_preds, temp) %>%
summarise(conf_lower = quantile(pred, 0.025),
conf_upper = quantile(pred, 0.975)) %>%
ungroup()
# # plot bootstrapped CIs
# p1 <- ggplot() +
#   geom_line(aes(temp, .fitted), d_preds, col = 'blue') +
#   geom_ribbon(aes(temp, ymin = conf_lower, ymax = conf_upper), boot1_conf_preds, fill = 'blue', alpha = 0.3) +
#   geom_point(aes(temp, N), sub, size = 2, alpha = 0.5) +
#   theme_bw(base_size = 12) +
#   labs(x = 'Temperature (ºC)',
#        y = 'Growth rate',
#        title = 'Growth rate across temperatures')
# plot bootstrapped predictions
# png(filename = paste("../results/TPC/",sp[s], "_TPC_K.png", sep = ""), width = 960, height = 960)
ggplot() +
geom_line(aes(temp, .fitted), d_preds, col = 'blue') +
geom_line(aes(temp, pred, group = iter), boot1_preds, col = 'blue', alpha = 0.01) +
geom_point(aes(temp, N), sub, size = 2, alpha = 0.5) +
theme_bw(base_size = 12) +
labs(x = 'Temperature (ºC)',
y = 'Carrying Capacity',
title = paste(sp[s],'Carrying Capacity across temperatures'))+
theme(text = element_text(size = 30))
# graphics.off()
}
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intraspecific Interaction",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,15),
cex.lab=2, cex.axis=2, cex.main=2.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 2)
}
legend(x = "topright", legend = c("S18", "W02", "W03"), col = color, lwd = 2, cex = 2)
png(filename = "../results/TPC/TPC_fitted.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intrinsic Growth Rate",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,15),
cex.lab=2, cex.axis=2, cex.main=2.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 2)
}
legend(x = "topright", legend = c("S18", "W02", "W03"), col = color, lwd = 2, cex = 2)
graphics.off()
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intrinsic Growth Rate",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,2),
cex.lab=2, cex.axis=2, cex.main=2.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 2)
}
legend(x = "topright", legend = c("S18", "W02", "W03"), col = color, lwd = 2, cex = 2)
png(filename = "../results/TPC/TPC_fitted.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intrinsic Growth Rate",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,1.2),
cex.lab=2, cex.axis=2, cex.main=2.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 2)
}
legend(x = "topright", legend = c("S18", "W02", "W03"), col = color, lwd = 2, cex = 2)
graphics.off()
png(filename = "../results/TPC/TPC_fitted.png", width = 480, height = 480)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intrinsic Growth Rate",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,1.2),
cex.lab=2, cex.axis=2, cex.main=2.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 2)
}
legend(x = "topright", legend = c("S18", "W02", "W03"), col = color, lwd = 2, cex = 2)
graphics.off()
png(filename = "../results/TPC/TPC_fitted.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intrinsic Growth Rate",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,1.2),
cex.lab=3, cex.axis=3, cex.main=3.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 2)
}
legend(x = "topleft", legend = c("S18", "W02", "W03"), col = color, lwd = 2, cex = 2)
graphics.off()
png(filename = "../results/TPC/TPC_fitted.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intrinsic Growth Rate",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,1.2),
cex.lab=3.5, cex.axis=3.5, cex.main=3.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 2)
}
legend(x = "topleft", legend = c("S18", "W02", "W03"), col = color, lwd = 2, cex = 3.5)
graphics.off()
png(filename = "../results/TPC/TPC_fitted.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intrinsic Growth Rate",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,1.2),
cex.lab=2.5, cex.axis=3.5, cex.main=3.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 2)
}
legend(x = "topleft", legend = c("S18", "W02", "W03"), col = color, lwd = 2, cex = 3.5)
graphics.off()
png(filename = "../results/TPC/TPC_fitted.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intrinsic Growth Rate",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,1.2),
cex.lab=3.5, cex.axis=2.5, cex.main=3.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 2)
}
legend(x = "topleft", legend = c("S18", "W02", "W03"), col = color, lwd = 2, cex = 3.5)
graphics.off()
png(filename = "../results/TPC/TPC_fitted.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intrinsic Growth Rate",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,1.2),
cex.lab=3.5, cex.axis=2.5, cex.main=3.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 3)
}
legend(x = "topleft", legend = c("S18", "W02", "W03"), col = color, lwd = 3, cex = 3.5)
graphics.off()
###################!!!!! Using the same code for a ##############
all_r = all_K
initials = data.frame()
for(s in 1:length(sp)){
# if(length(subset[,s][!is.na(subset[,s])]) > 4){
lnB0_start = min(all_r[1:6,s][!is.na(all_r[,s])], na.rm = T)
Th_v = all_r$temp[all_r[,s] == max(all_r[,s], na.rm = T)] #subset[,4][subset[,s] == max(subset[,s], na.rm = T)]
Th_start = Th_v[!is.na(Th_v)]
## Fitting lnB ~ -1/k*(1/T-1/283.15) as linear model (Arrhenius)
## intercept = lnB0, slope = Ea
kkt = -1/(k*all_r$temp)+1/(285.15*k) # -1/k*(1/T-1/283.15)
befdeact = all_r[,s][all_r$temp <= Th_start] # lnB before deactivation
B_befT = kkt[all_r$temp <= Th_start] # -1/k*(1/T-1/283.15) before deactivation
lm_Arr = lm(befdeact~B_befT)
lnB0_start = summary(lm_Arr)$coefficients[1]
Ea_start = summary(lm_Arr)$coefficients[2]
# row = data.frame(r_tref = exp(lnB0_start), e = Ea_start, eh = 7, th = Th_start)
row = data.frame(r_tref = lnB0_start, e = Ea_start, eh = 7, th = Th_start)
initials = rbind(initials, row)
}
temp_plot = seq(10,30,0.1)
est_params = data.frame()
for(s in 1:3){
start_vals = initials[s,]
sub <- data.frame(N = all_r[,s], temp = all_r$temp)
# get limits
low_lims <- get_lower_lims(sub$temp, sub$N, model_name = 'sharpeschoolhigh_1981')
upper_lims <- get_upper_lims(sub$temp, sub$N, model_name = 'sharpeschoolhigh_1981')
fit <- nls_multstart(N~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = sub,
iter = 2000,
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = low_lims,
upper = upper_lims,
supp_errors = 'Y')
plot(sub$temp, -sub$N, main = sp[s])#,
#ylim = c(min(sub$N, na.rm = T), (max(sub$N, na.rm = T)+0.2)))
out = as.numeric(c(start_vals, summary(fit)$coefficients[1:4], AIC(fit)))
B0 = out[5]; Ea = out[6]; Eh = out[7]; Th = out[8]
B_plot = sharpeschoolhigh_1981(temp = temp_plot, r_tref = B0, e = Ea, eh = Eh, th = Th, tref = 12)
# Another_plot = sharpeschoolhigh_1981(temp = temp_plot, r_tref = out[1], e = out[2], eh =out[3], th = out[4], tref = 12)
lines(temp_plot, -B_plot, col = 'black')
# lines(temp_plot, Another_plot, col = 'black')
est_params = rbind(est_params, out)
}
names(est_params) = c("lnB0_Arr","Ea_Arr","Eh_Arr", "Th_Arr", "B0", "Ea", "Eh", "Th", "AIC")
est_params$sp = sp
mean(est_params$B0)
mean(est_params$Ea)
# write.csv(est_params, "../results/TPC/est_params_K.csv", row.names=FALSE)
for(s in 1:length(sp)){
B0 = est_params[s,5]; Ea = est_params[s,6]; Eh = est_params[s,7]; Th = est_params[s,8]
if(s == 1){
fit <- nlsLM(S18~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = all_r, start = list(r_tref=B0, e=Ea, eh=Eh, th=Th),
control = list(maxiter = 500))
}else if(s == 2){
fit <- nlsLM(W02~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = all_r, start = list(r_tref=B0, e=Ea, eh=Eh, th=Th),
control = list(maxiter = 500))
}else{
fit <- nlsLM(W03~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = all_r, start = list(r_tref=B0, e=Ea, eh=Eh, th=Th),
control = list(maxiter = 500))
}
bootresult <-  Boot(fit, method = 'case')
# png(filename = paste("../results/TPC/", sp[s], "_TPC_a_boot.png", sep = ""), width = 960, height = 960)
# hist(bootresult, layout = c(2,2))
# graphics.off()
sub <- data.frame(N = all_r[,s], temp = all_r$temp)
d_fit <- nest(sub, data = c(temp, N)) %>%
mutate(sharpeschoolhigh = map(data, ~nlsLM(N~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = .x, start = list(r_tref=B0, e=Ea, eh=Eh, th=Th),
control = list(maxiter = 500))),
# create new temperature data
new_data = map(data, ~tibble(temp = seq(min(.x$temp), max(.x$temp), length.out = 100))),
# predict over that data,
preds =  map2(sharpeschoolhigh, new_data, ~augment(.x, newdata = .y)))
# unnest predictions
d_preds <- select(d_fit, preds) %>%
unnest(preds)
boot1_preds <- bootresult$t %>%
as.data.frame() %>%
drop_na() %>%
mutate(iter = 1:n()) %>%
group_by_all() %>%
do(data.frame(temp = seq(min(all_r$temp), max(all_r$temp), length.out = 100))) %>%
ungroup() %>%
mutate(pred = sharpeschoolhigh_1981(temp, r_tref, e, eh, th, tref = 12))
# calculate bootstrapped confidence intervals
boot1_conf_preds <- group_by(boot1_preds, temp) %>%
summarise(conf_lower = quantile(pred, 0.025),
conf_upper = quantile(pred, 0.975)) %>%
ungroup()
# # plot bootstrapped CIs
# p1 <- ggplot() +
#   geom_line(aes(temp, .fitted), d_preds, col = 'blue') +
#   geom_ribbon(aes(temp, ymin = conf_lower, ymax = conf_upper), boot1_conf_preds, fill = 'blue', alpha = 0.3) +
#   geom_point(aes(temp, N), sub, size = 2, alpha = 0.5) +
#   theme_bw(base_size = 12) +
#   labs(x = 'Temperature (ºC)',
#        y = 'Growth rate',
#        title = 'Growth rate across temperatures')
# plot bootstrapped predictions
# png(filename = paste("../results/TPC/",sp[s], "_TPC_K.png", sep = ""), width = 960, height = 960)
ggplot() +
geom_line(aes(temp, .fitted), d_preds, col = 'blue') +
geom_line(aes(temp, pred, group = iter), boot1_preds, col = 'blue', alpha = 0.01) +
geom_point(aes(temp, N), sub, size = 2, alpha = 0.5) +
theme_bw(base_size = 12) +
labs(x = 'Temperature (ºC)',
y = 'Carrying Capacity',
title = paste(sp[s],'Carrying Capacity across temperatures'))+
theme(text = element_text(size = 30))
# graphics.off()
}
png(filename = "../results/TPC/TPC_fitted_K.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Carrying Capacity",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,1.2),
cex.lab=3.5, cex.axis=2.5, cex.main=3.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 3)
}
legend(x = "topleft", legend = c("S18", "W02", "W03"), col = color, lwd = 3, cex = 3.5)
graphics.off()
png(filename = "../results/TPC/TPC_fitted_K.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Carrying Capacity",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,0.6),
cex.lab=3.5, cex.axis=2.5, cex.main=3.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 3)
}
legend(x = "topleft", legend = c("S18", "W02", "W03"), col = color, lwd = 3, cex = 3.5)
graphics.off()
png(filename = "../results/TPC/TPC_fitted_K.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Carrying Capacity",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,0.6),
cex.lab=3.5, cex.axis=2.5, cex.main=3.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 3)
}
legend(x = "topright", legend = c("S18", "W02", "W03"), col = color, lwd = 3, cex = 3.5)
graphics.off()
all_r = all_a
initials = data.frame()
for(s in 1:length(sp)){
# if(length(subset[,s][!is.na(subset[,s])]) > 4){
lnB0_start = min(all_r[1:6,s][!is.na(all_r[,s])], na.rm = T)
Th_v = all_r$temp[all_r[,s] == max(all_r[,s], na.rm = T)] #subset[,4][subset[,s] == max(subset[,s], na.rm = T)]
Th_start = Th_v[!is.na(Th_v)]
## Fitting lnB ~ -1/k*(1/T-1/283.15) as linear model (Arrhenius)
## intercept = lnB0, slope = Ea
kkt = -1/(k*all_r$temp)+1/(285.15*k) # -1/k*(1/T-1/283.15)
befdeact = all_r[,s][all_r$temp <= Th_start] # lnB before deactivation
B_befT = kkt[all_r$temp <= Th_start] # -1/k*(1/T-1/283.15) before deactivation
lm_Arr = lm(befdeact~B_befT)
lnB0_start = summary(lm_Arr)$coefficients[1]
Ea_start = summary(lm_Arr)$coefficients[2]
# row = data.frame(r_tref = exp(lnB0_start), e = Ea_start, eh = 7, th = Th_start)
row = data.frame(r_tref = lnB0_start, e = Ea_start, eh = 7, th = Th_start)
initials = rbind(initials, row)
}
temp_plot = seq(10,30,0.1)
est_params = data.frame()
for(s in 1:3){
start_vals = initials[s,]
sub <- data.frame(N = all_r[,s], temp = all_r$temp)
# get limits
low_lims <- get_lower_lims(sub$temp, sub$N, model_name = 'sharpeschoolhigh_1981')
upper_lims <- get_upper_lims(sub$temp, sub$N, model_name = 'sharpeschoolhigh_1981')
fit <- nls_multstart(N~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = sub,
iter = 2000,
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = low_lims,
upper = upper_lims,
supp_errors = 'Y')
plot(sub$temp, -sub$N, main = sp[s])#,
#ylim = c(min(sub$N, na.rm = T), (max(sub$N, na.rm = T)+0.2)))
out = as.numeric(c(start_vals, summary(fit)$coefficients[1:4], AIC(fit)))
B0 = out[5]; Ea = out[6]; Eh = out[7]; Th = out[8]
B_plot = sharpeschoolhigh_1981(temp = temp_plot, r_tref = B0, e = Ea, eh = Eh, th = Th, tref = 12)
# Another_plot = sharpeschoolhigh_1981(temp = temp_plot, r_tref = out[1], e = out[2], eh =out[3], th = out[4], tref = 12)
lines(temp_plot, -B_plot, col = 'black')
# lines(temp_plot, Another_plot, col = 'black')
est_params = rbind(est_params, out)
}
names(est_params) = c("lnB0_Arr","Ea_Arr","Eh_Arr", "Th_Arr", "B0", "Ea", "Eh", "Th", "AIC")
est_params$sp = sp
mean(est_params$B0)
mean(est_params$Ea)
# write.csv(est_params, "../results/TPC/est_params_K.csv", row.names=FALSE)
for(s in 1:length(sp)){
B0 = est_params[s,5]; Ea = est_params[s,6]; Eh = est_params[s,7]; Th = est_params[s,8]
if(s == 1){
fit <- nlsLM(S18~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = all_r, start = list(r_tref=B0, e=Ea, eh=Eh, th=Th),
control = list(maxiter = 500))
}else if(s == 2){
fit <- nlsLM(W02~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = all_r, start = list(r_tref=B0, e=Ea, eh=Eh, th=Th),
control = list(maxiter = 500))
}else{
fit <- nlsLM(W03~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = all_r, start = list(r_tref=B0, e=Ea, eh=Eh, th=Th),
control = list(maxiter = 500))
}
bootresult <-  Boot(fit, method = 'case')
# png(filename = paste("../results/TPC/", sp[s], "_TPC_a_boot.png", sep = ""), width = 960, height = 960)
# hist(bootresult, layout = c(2,2))
# graphics.off()
sub <- data.frame(N = all_r[,s], temp = all_r$temp)
d_fit <- nest(sub, data = c(temp, N)) %>%
mutate(sharpeschoolhigh = map(data, ~nlsLM(N~sharpeschoolhigh_1981(temp = temp, r_tref,e,eh,th, tref = 12),
data = .x, start = list(r_tref=B0, e=Ea, eh=Eh, th=Th),
control = list(maxiter = 500))),
# create new temperature data
new_data = map(data, ~tibble(temp = seq(min(.x$temp), max(.x$temp), length.out = 100))),
# predict over that data,
preds =  map2(sharpeschoolhigh, new_data, ~augment(.x, newdata = .y)))
# unnest predictions
d_preds <- select(d_fit, preds) %>%
unnest(preds)
boot1_preds <- bootresult$t %>%
as.data.frame() %>%
drop_na() %>%
mutate(iter = 1:n()) %>%
group_by_all() %>%
do(data.frame(temp = seq(min(all_r$temp), max(all_r$temp), length.out = 100))) %>%
ungroup() %>%
mutate(pred = sharpeschoolhigh_1981(temp, r_tref, e, eh, th, tref = 12))
# calculate bootstrapped confidence intervals
boot1_conf_preds <- group_by(boot1_preds, temp) %>%
summarise(conf_lower = quantile(pred, 0.025),
conf_upper = quantile(pred, 0.975)) %>%
ungroup()
# # plot bootstrapped CIs
# p1 <- ggplot() +
#   geom_line(aes(temp, .fitted), d_preds, col = 'blue') +
#   geom_ribbon(aes(temp, ymin = conf_lower, ymax = conf_upper), boot1_conf_preds, fill = 'blue', alpha = 0.3) +
#   geom_point(aes(temp, N), sub, size = 2, alpha = 0.5) +
#   theme_bw(base_size = 12) +
#   labs(x = 'Temperature (ºC)',
#        y = 'Growth rate',
#        title = 'Growth rate across temperatures')
# plot bootstrapped predictions
# png(filename = paste("../results/TPC/",sp[s], "_TPC_K.png", sep = ""), width = 960, height = 960)
ggplot() +
geom_line(aes(temp, .fitted), d_preds, col = 'blue') +
geom_line(aes(temp, pred, group = iter), boot1_preds, col = 'blue', alpha = 0.01) +
geom_point(aes(temp, N), sub, size = 2, alpha = 0.5) +
theme_bw(base_size = 12) +
labs(x = 'Temperature (ºC)',
y = 'Carrying Capacity',
title = paste(sp[s],'Carrying Capacity across temperatures'))+
theme(text = element_text(size = 30))
# graphics.off()
}
###############################
png(filename = "../results/TPC/TPC_fitted_a.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intraspecific Interaction",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,0.6),
cex.lab=3.5, cex.axis=2.5, cex.main=3.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 3)
}
legend(x = "topright", legend = c("S18", "W02", "W03"), col = color, lwd = 3, cex = 3.5)
graphics.off()
png(filename = "../results/TPC/TPC_fitted_a.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Intraspecific Interaction",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,15),
cex.lab=3.5, cex.axis=2.5, cex.main=3.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 3)
}
legend(x = "topright", legend = c("S18", "W02", "W03"), col = color, lwd = 3, cex = 3.5)
graphics.off()
png(filename = "../results/TPC/TPC_fitted_a.png", width = 960, height = 960)
par(mar = c(5,6,1,1))
plot(1, type="n", xlab="Temperature", ylab = "Self-Regulation",
xlim = c(temp[1],temp[length(temp)]),
ylim =c(0,15),
cex.lab=3.5, cex.axis=2.5, cex.main=3.5)
for(s in 1:length(sp)){
mean_school = sharpeschoolhigh_1981(temp = temp_plot,  r_tref = est_params$B0[s],
e = est_params$Ea[s], eh = est_params$Eh[s],
th = est_params$Th[s], tref = 12)
lines(temp_plot, mean_school, col = color[s], lwd = 3)
}
legend(x = "topleft", legend = c("S18", "W02", "W03"), col = color, lwd = 3, cex = 3.5)
graphics.off()
