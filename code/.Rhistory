ODra_rep_sd$day = sort(rep(time[0:35],5))
ODra_rep$temp = rep(temp,35)
ODra_rep_sd$temp = rep(temp,35)
sp_ra = c(sp[sort(rep(4:7,2))],sp[7])
spinside = c("S18", "W02", "S18", "W03", "W02", "W03", "S18", "W02", "W03")
colors_ra = c("darkgreen", "blue", "darkgreen", "chocolate2", "blue", "chocolate2", "darkgreen", "blue", "chocolate2")
# pdf("../results/Ramping_ra_OD_errbar.pdf")
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
png(filename = paste(("../results/Ramping_ra_OD_errbar/"),j,"_", i,".png",sep=""), width = 1400, height = 1400)
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max(sub, na.rm = T)+max(sub_sd,na.rm = T)),
cex.lab=3, cex.axis=3, cex.main=4)
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1, lwd=3)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1],
code=3, angle=90, lwd=3, length = 0.05, colors_ra[sp_ra_v][1])
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1, lwd=3)
arrows(x0=time, y0=sub[,2]-sub_sd[,2], x1=time, y1=sub[,2]+sub_sd[,2],
code=3, angle=90, lwd=3, length = 0.05, colors_ra[sp_ra_v][2])
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1, lwd=3)
arrows(x0=time, y0=sub[,3]-sub_sd[,3], x1=time, y1=sub[,3]+sub_sd[,3],
code=3, angle=90, lwd=3, length = 0.05, col = colors_ra[sp_ra_v][3])
}
op <- par(cex = 4)
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 3)
graphics.off()
}
}
# pdf("../results/Ramping_ra_OD_errbar.pdf")
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
# png(filename = paste(("../results/Ramping_ra_OD_errbar/"),j,"_", i,".png",sep=""), width = 1400, height = 1400)
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max(sub, na.rm = T)+max(sub_sd,na.rm = T)),
cex.lab=3, cex.axis=3, cex.main=4)
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1, lwd=3)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1],
code=3, angle=90, lwd=3, length = 0.05, colors_ra[sp_ra_v][1])
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1, lwd=3)
arrows(x0=time, y0=sub[,2]-sub_sd[,2], x1=time, y1=sub[,2]+sub_sd[,2],
code=3, angle=90, lwd=3, length = 0.05, colors_ra[sp_ra_v][2])
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1, lwd=3)
arrows(x0=time, y0=sub[,3]-sub_sd[,3], x1=time, y1=sub[,3]+sub_sd[,3],
code=3, angle=90, lwd=3, length = 0.05, col = colors_ra[sp_ra_v][3])
}
op <- par(cex = 4)
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 3)
# graphics.off()
}
}
View(ODra_rep)
View(ODra_rep)
View(ODra_rep[ODra_rep$day == 0])
View(ODra_rep[ODra_rep$day == 0,])
View(ODra_rep[ODra_rep$day == 0,1])
View(ODra_rep[1,])
View(ODra_rep[1,1:10])
write.csv(ODra_rep[1,1:10], "../results/TPC/initial_biomass.csv", row.names=FALSE)
View(Ramping)
View(Ramping_fat)
View(ra)
View(ra_OD)
Ramping_fat[Ramping_fat$Day == 0,1:9]
do.call("rbind", replicate(5, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 0,1:9]), na.rm = T)
, simplify = FALSE)
)
names(Ramping_fat) = names(ra_p)
Ramping_fat$group = c(sort(rep(seq(1,6,1), (30*3))), rep(6,30), rep(7,60), sort(rep(8:9,(30*3))), sort(rep(10:11,(30*4))))
Ramping_fat[Ramping_fat$Day == 0,1:9]
# group 1
ra_rep = colMeans(ra_p[1:6,1:9], na.rm = T)
ODra_rep = rbind(do.call("rbind", replicate(5, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 0,1:9]), na.rm = T), simplify = FALSE)),
do.call("rbind", replicate(5, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 1,1:9]), na.rm = T), simplify = FALSE)),
do.call("rbind", replicate(5, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 2,1:9]), na.rm = T), simplify = FALSE)))# the first part of the data frame
ODra_rep = rbind(do.call("rbind", replicate(5, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 0,1:9]), na.rm = T), simplify = FALSE)),
do.call("rbind", replicate(5, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 1,1:9]), na.rm = T), simplify = FALSE)),
do.call("rbind", replicate(5, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 2,1:9]), na.rm = T), simplify = FALSE)))# the first part of the data frame
View(Ramping_fat[Ramping_fat$Day == 0,:])
View(Ramping_fat[Ramping_fat$Day == 0,])
View(ra_p[1:6,1:9])
View(ra_p[1:6,])
# group 1
ra_rep = colMeans(ra_p[1:6,1:9], na.rm = T)
View(ra_rep* Ramping_fat[Ramping_fat$Day == 0,1:9])
View(Ramping_fat[Ramping_fat$Day == 1,])
colMeans(ra_p[1:6,1:9], na.rm = T)
Ramping_fat[Ramping_fat$Day == 1,]
ra_rep* Ramping_fat[Ramping_fat$Day == 1,1:9]
Ramping_fat[Ramping_fat$Day == 1,1:9]
Ramping_fat[Ramping_fat$Day == 1,]
colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == "10C",1:9]), na.rm = T)
Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == "10C",1:9]
Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == "10C",]
colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == "10C",1:9]), na.rm = T)
temp
Day1 = data.frame()
Day2 = data.frame()
for(i in temp){
Day1 = rbind(Day1, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == i,1:9]), na.rm = T))
Day2 = rbind(Day2, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 2 & Ramping_fat$temp == i,1:9]), na.rm = T))
}
View(Day1)
Day0 = do.call("rbind", replicate(5, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 0,1:9]), na.rm = T), simplify = FALSE))
ODra_rep = rbind(Day0, Day1, Day2)# the first part of the data frame
unname()
unname(Day1)
ODra_rep = rbind(unname(Day0), unname(Day1), unname(Day2))# the first part of the data frame
unname(Day0)
unname(Day1)
Day0
names(Day1) = names(Day0)
Day1
names(Day0)
names(Day1) = colnames(Day0)
colnames(Day0)
names(Day1)
names(Day1) = names(Day2) = colnames(Day0)
names(Day2)
ODra_rep = rbind(Day0, Day1, Day2)# the first part of the data frame
Day1 = data.frame(); Day2 = data.frame(); Day1_sd = data.frame(); Day2_sd = data.frame()
Day1 = data.frame(); Day2 = data.frame(); Day1_sd = data.frame(); Day2_sd = data.frame()
for(i in temp){
Day1 = rbind(Day1, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == i,1:9]), na.rm = T))
Day2 = rbind(Day2, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 2 & Ramping_fat$temp == i,1:9]), na.rm = T))
Day1_sd = rbind(Day1_sd, apply((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == i,1:9]), 2, sd))
Day2_sd = rbind(Day2_sd, apply((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == i,1:9]), 2, sd))
}
names(Day1) = names(Day2) = names(Day1_sd) = names(Day2_sd) = colnames(Day0)
ODra_rep = rbind(Day0, Day1, Day2)# the first part of the data frame
Day0_sd = do.call("rbind", replicate(5, apply((ra_rep* Ramping_fat[Ramping_fat$Day == 0,1:9]), 2, sd), simplify = FALSE))
# group 1
ra_rep = colMeans(ra_p[1:6,1:9], na.rm = T)
Day0 = do.call("rbind", replicate(5, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 0,1:9]), na.rm = T), simplify = FALSE))
Day0_sd = do.call("rbind", replicate(5, apply((ra_rep* Ramping_fat[Ramping_fat$Day == 0,1:9]), 2, sd), simplify = FALSE))
Day1 = data.frame(); Day2 = data.frame(); Day1_sd = data.frame(); Day2_sd = data.frame()
for(i in temp){
Day1 = rbind(Day1, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == i,1:9]), na.rm = T))
Day2 = rbind(Day2, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 2 & Ramping_fat$temp == i,1:9]), na.rm = T))
Day1_sd = rbind(Day1_sd, apply((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == i,1:9]), 2, sd))
Day2_sd = rbind(Day2_sd, apply((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == i,1:9]), 2, sd))
}
names(Day1) = names(Day2) = names(Day1_sd) = names(Day2_sd) = colnames(Day0)
ODra_rep = rbind(Day0, Day1, Day2)# the first part of the data frame
ODra_rep_sd = rbind(Day0_sd, Day1_sd, Day2_sd)
View(ODra_rep)
# groups 2-10
list = do.call("rbind", replicate(3,list(c(1,2),c(3,4),c(5,6))))
reps_data = data.frame()
ra_all = data.frame()
for(i in 1:9){
reps_data = rbind(reps_data,
subset(Ramping_fat, group == (i+1) & Rep == list[i,]))
subset = subset(ra_p, Day == (2*(i+1)))
b_subset = do.call("rbind",replicate((length(unique(Ramping_fat$Day[Ramping_fat$group == (i+1)]))+1), subset, simplify = FALSE))
ra_all = rbind(ra_all, b_subset)
}
View(ra_all)
i = 1
Ramping_fat$Day[Ramping_fat$group == (i+1)]
length(unique(Ramping_fat$Day[Ramping_fat$group == (i+1)]))+1
subset
subset = subset(ra_p, Day == (2*(i+1)))
subset
b_subset
b_subset = do.call("rbind",replicate((length(unique(Ramping_fat$Day[Ramping_fat$group == (i+1)]))+1), subset, simplify = FALSE))
b_subset
ra_all = rbind(ra_all, b_subset)
ra_all
# groups 2-10
list = do.call("rbind", replicate(3,list(c(1,2),c(3,4),c(5,6))))
reps_data = data.frame()
ra_all = data.frame()
for(i in 1:9){
reps_data = rbind(reps_data,
subset(Ramping_fat, group == (i+1) & Rep == list[i,]))
subset = subset(ra_p, Day == (2*(i+1)))
b_subset = do.call("rbind",replicate((length(unique(Ramping_fat$Day[Ramping_fat$group == (i+1)]))+1), subset, simplify = FALSE))
ra_all = rbind(ra_all, b_subset)
}
abs_od = reps_data[1:9]*ra_all[1:9]
abs_od = data.frame(abs_od, reps_data[10:13])
View(abs_od)
# groups 2-10
list = do.call("rbind", replicate(3,list(c(1,2),c(3,4),c(5,6))))
reps_data = data.frame()
ra_all = data.frame()
for(i in 1:9){
reps_data = rbind(reps_data,
subset(Ramping_fat, group == (i+1) & Rep == list[i,]))
subset = subset(ra_p, Day == (2*(i+1)))
b_subset = do.call("rbind",replicate((length(unique(Ramping_fat$Day[Ramping_fat$group == (i+1)]))+1), subset, simplify = FALSE))
ra_all = rbind(ra_all, b_subset)
}
abs_od = reps_data[1:9]*ra_all[1:9]
abs_od = data.frame(abs_od, reps_data[10:13])
reps_data
reps_data[10:13]
reps_data
view(reps_data)
ra_all
colnames(ODra_rep)
mean = data.frame()
sd = data.frame()
for(i in 1:28){
subset = abs_od[((i-1)*10+1):(i*10),]
for(j in temp){
mean = rbind(mean, colMeans(subset[subset$temp == j,1:9],na.rm = T))
sd = rbind(sd, apply(subset[subset$temp == j,1:9], 2, sd))
}
}
colnames(mean) = colnames(ODra_rep)
ODra_rep = rbind(ODra_rep, mean)
colnames(sd) = colnames(ODra_rep_sd)
ODra_rep_sd = rbind(ODra_rep_sd, sd)
replicate(4, subset(ra_p, Day == 24)
, simplify = FALSE)
# group 11
ra_rep = do.call("rbind", replicate(4, subset(ra_p, Day == 24), simplify = FALSE))
data = cbind(Ramping_fat[Ramping_fat$group == 11,1:9]*ra_rep[1:9], Ramping_fat[Ramping_fat$group == 11,10:13])
mean = data.frame()
sd = data.frame()
for(i in 1:4){
subset = data[((i-1)*30+1):(i*30),]
for(j in temp){
mean = rbind(mean, colMeans(subset[subset$temp == j,1:9],na.rm = T))
sd = rbind(sd, apply(subset[subset$temp == j,1:9], 2, sd))
}
}
colnames(mean) = colnames(ODra_rep)
ODra_rep = rbind(ODra_rep, mean)
colnames(sd) = colnames(ODra_rep_sd)
ODra_rep_sd = rbind(ODra_rep_sd, sd)
ODra_rep$day = sort(rep(time[0:35],5))
ODra_rep_sd$day = sort(rep(time[0:35],5))
ODra_rep$temp = rep(temp,35)
ODra_rep_sd$temp = rep(temp,35)
sp_ra = c(sp[sort(rep(4:7,2))],sp[7])
spinside = c("S18", "W02", "S18", "W03", "W02", "W03", "S18", "W02", "W03")
colors_ra = c("darkgreen", "blue", "darkgreen", "chocolate2", "blue", "chocolate2", "darkgreen", "blue", "chocolate2")
# pdf("../results/Ramping_ra_OD_errbar.pdf")
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
png(filename = paste(("../results/Ramping_ra_OD_errbar/"),j,"_", i,".png",sep=""), width = 1400, height = 1400)
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max(sub, na.rm = T)+max(sub_sd,na.rm = T)),
cex.lab=3, cex.axis=3, cex.main=4)
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1, lwd=3)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1],
code=3, angle=90, lwd=3, length = 0.05, colors_ra[sp_ra_v][1])
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1, lwd=3)
arrows(x0=time, y0=sub[,2]-sub_sd[,2], x1=time, y1=sub[,2]+sub_sd[,2],
code=3, angle=90, lwd=3, length = 0.05, colors_ra[sp_ra_v][2])
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1, lwd=3)
arrows(x0=time, y0=sub[,3]-sub_sd[,3], x1=time, y1=sub[,3]+sub_sd[,3],
code=3, angle=90, lwd=3, length = 0.05, col = colors_ra[sp_ra_v][3])
}
op <- par(cex = 4)
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 3)
graphics.off()
}
}
install.packages("dynr")
install.packages("dynr")
update.packages(ask = FALSE)
install.packages("dynr")
library(dynr)
install.packages("dynr")
library(dynr)
d = read.table("./Data/GrowthCurveExample.csv",
sep=",", header = TRUE)
data(Oscillator)
data <- dynr.data(Oscillator, id="id", time="times", observed="y1")
rm(list=ls())
dev.off()
library(dynr)
data(Oscillator)
data <- dynr.data(Oscillator, id="id", time="times", observed="y1")
View(Oscillator)
View(Oscillator)
meas <- prep.measurement(
values.load=matrix(c(1, 0), 1, 2),
params.load=matrix(c('fixed', 'fixed'), 1, 2),
state.names=c("Position","Velocity"),
obs.names=c("y1"))
View(meas)
data <- dynr.data(Oscillator, id="id", time="times", observed="y1")
meas <- prep.measurement(
values.load=matrix(c(1, 0), 1, 2),
params.load=matrix(c('fixed', 'fixed'), 1, 2),
state.names=c("Position","Velocity"),
obs.names=c("y1"))
ecov <- prep.noise(
values.latent=diag(c(0, 1), 2), params.latent=diag(c('fixed', 'dnoise'), 2),
values.observed=diag(1.5, 1), params.observed=diag('mnoise', 1))
dynamics <- prep.matrixDynamics(
values.dyn=matrix(c(0, -0.1, 1, -0.2), 2, 2),
params.dyn=matrix(c('fixed', 'spring', 'fixed', 'friction'), 2, 2),
isContinuousTime=TRUE)
initial <- prep.initial(
values.inistate=c(0, 1),
params.inistate=c('inipos', 'fixed'),
values.inicov=diag(1, 2),
params.inicov=diag('fixed', 2))
model <- dynr.model(dynamics=dynamics, measurement=meas, noise=ecov, initial=initial, data=data, outfile="LinearSDE.c")
printex(model,ParameterAs=model$param.names,show=FALSE,printInit=TRUE,
outFile="LinearSDE.tex")
tools::texi2pdf("LinearSDE.tex")
system(paste(getOption("pdfviewer"), "LinearSDE.pdf"))
res <- dynr.cook(model, verbose=FALSE)
summary(res)
rm(list=ls())
dev.off()
rm(list=ls())
dev.off()
library(dynr)
rm(list=ls())
dev.off()
r1 = read.csv("../data/Ramping/OD_readings/Danica_Ramping_rr1.csv")
r2 = read.csv("../data/Ramping/OD_readings/Danica_Ramping_rr2.csv")
r3 = read.csv("../data/Ramping/OD_readings/Danica_Ramping_rr3.csv")
r4 = read.csv("../data/Ramping/OD_readings/Danica_Ramping_rr4.csv")
Ramping = rbind(r1,r2,r3,r4)
Ramping = Ramping[!is.na(Ramping$X.11),] # removing rows without data
Ramping = Ramping[,-1] # removing numbering col
Ramping = Ramping[,-ncol(Ramping)] # removing wavelength col
names(Ramping) = seq(1,ncol(Ramping))
### for timing each relative abundance with OD
Ramping = Ramping[4:11]
Ramping = Ramping[-seq(1, nrow(Ramping), 8),]
Ramping = Ramping[-seq(7, nrow(Ramping), 7),]
rownames(Ramping) = seq(1:1050)
Ramping[which(is.na(Ramping[,2])),2] = Ramping[(which(is.na(Ramping[,2]))+1),2]
Ramping[which(is.na(Ramping[,2])),2] = Ramping[(which(is.na(Ramping[,2]))+1),2]
Ramping[,1:8] = Ramping[,1:8] - Ramping[,2]
Ramping = Ramping[,-2]
temp = c("10C","10_30C","20C","30C","Ramping")
time = c(0,1,2,3,4,4,5,6,6,7,8,8,9,10,10,11,12,12,13,14,14,15,16,16,17,18,18,19,20,20,21,22,22,23,24)
Ramping$temp = rep(temp[sort(rep(1:5,6))], 35)
Ramping$Day = sort(rep(time, 6*5))
Ramping$Rep = rep(1:6,(35*5))
######################## Mean and standard deviation ####################
data = data.frame()
sd = data.frame()
for(j in 4:11){
d = c()
e = c()
for(i in 1:(35*5)){ # 35 plate readings * 5 treatments
d = c(d,mean(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
e = c(e,sd(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
}
data = rbind(data,d)
sd = rbind(sd, e)
}
row.names(sd) = seq(1,(35*5))
sd = sd[,-2]
############################ Plotting OD ##############################
time = c(0,1,2,3,4,4,5,6,6,7,8,8,9,10,10,11,12,12,13,14,14,15,16,16,17,18,18,19,20,20,21,22,22,23,24)
sp = c("S18", "W02", "W03", "S18+W02", "S18+W03", "W02+W03", "All")
temp = c("10C","10_30C","20C","30C","Ramping")
color = c("blue","yellow", "darkorange", "brown", "black")
color_by_sp = c("darkgreen", "blue", "chocolate2", "darkblue", "burlywood4", "blueviolet", "black")
pch_by_sp = c(1,1,1,2,4,5,3)
################################### OD * RA (reps) #####################################################
Ramping_fat = data.frame(replicate(2, Ramping[,1],simplify = F),
replicate(2, Ramping[,2],simplify = F),
replicate(2, Ramping[,3],simplify = F),
replicate(3, Ramping[,4],simplify = F),Ramping[,8:10])
names(Ramping_fat) = names(ra_p)
####################### Relative abundance ###########################
ra = read.csv("../data/Ramping/Relative_abundance.csv")
ra_p = data.frame(matrix(NA, nrow = nrow(ra), ncol = 0))
for(i in 1:3){
ra_p = cbind(ra_p, ra[i*2-1]/(ra[i*2-1]+ra[i*2]), ra[i*2]/(ra[i*2-1]+ra[i*2]))
}
ra_p = cbind(ra_p, ra[7:9]/apply(ra[7:9],1,sum), ra[10:12])
d = unique(ra_p$Day)
################################### OD * RA (reps) #####################################################
Ramping_fat = data.frame(replicate(2, Ramping[,1],simplify = F),
replicate(2, Ramping[,2],simplify = F),
replicate(2, Ramping[,3],simplify = F),
replicate(3, Ramping[,4],simplify = F),Ramping[,8:10])
names(Ramping_fat) = names(ra_p)
Ramping_fat$group = c(sort(rep(seq(1,6,1), (30*3))), rep(6,30), rep(7,60),
sort(rep(8:9,(30*3))), sort(rep(10:11,(30*4))))
# group 1
ra_rep = colMeans(ra_p[1:6,1:9], na.rm = T)
Day0 = do.call("rbind", replicate(5, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 0,1:9]), na.rm = T), simplify = FALSE))
Day0_sd = do.call("rbind", replicate(5, apply((ra_rep* Ramping_fat[Ramping_fat$Day == 0,1:9]), 2, sd), simplify = FALSE))
Day1 = data.frame(); Day2 = data.frame(); Day1_sd = data.frame(); Day2_sd = data.frame()
for(i in temp){
Day1 = rbind(Day1, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == i,1:9]), na.rm = T))
Day2 = rbind(Day2, colMeans((ra_rep* Ramping_fat[Ramping_fat$Day == 2 & Ramping_fat$temp == i,1:9]), na.rm = T))
Day1_sd = rbind(Day1_sd, apply((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == i,1:9]), 2, sd))
Day2_sd = rbind(Day2_sd, apply((ra_rep* Ramping_fat[Ramping_fat$Day == 1 & Ramping_fat$temp == i,1:9]), 2, sd))
}
names(Day1) = names(Day2) = names(Day1_sd) = names(Day2_sd) = colnames(Day0)
ODra_rep = rbind(Day0, Day1, Day2)# the first part of the data frame
ODra_rep_sd = rbind(Day0_sd, Day1_sd, Day2_sd)
# groups 2-10
list = do.call("rbind", replicate(3,list(c(1,2),c(3,4),c(5,6))))
reps_data = data.frame()
ra_all = data.frame()
for(i in 1:9){
reps_data = rbind(reps_data,
subset(Ramping_fat, group == (i+1) & Rep == list[i,]))
subset = subset(ra_p, Day == (2*(i+1)))
b_subset = do.call("rbind",replicate((length(unique(Ramping_fat$Day[Ramping_fat$group == (i+1)]))+1), subset, simplify = FALSE))
ra_all = rbind(ra_all, b_subset)
}
abs_od = reps_data[1:9]*ra_all[1:9]
abs_od = data.frame(abs_od, reps_data[10:13])
mean = data.frame()
sd = data.frame()
for(i in 1:28){
subset = abs_od[((i-1)*10+1):(i*10),]
for(j in temp){
mean = rbind(mean, colMeans(subset[subset$temp == j,1:9],na.rm = T))
sd = rbind(sd, apply(subset[subset$temp == j,1:9], 2, sd))
}
}
colnames(mean) = colnames(ODra_rep)
ODra_rep = rbind(ODra_rep, mean)
colnames(sd) = colnames(ODra_rep_sd)
ODra_rep_sd = rbind(ODra_rep_sd, sd)
# group 11
ra_rep = do.call("rbind", replicate(4, subset(ra_p, Day == 24), simplify = FALSE))
data = cbind(Ramping_fat[Ramping_fat$group == 11,1:9]*ra_rep[1:9], Ramping_fat[Ramping_fat$group == 11,10:13])
mean = data.frame()
sd = data.frame()
for(i in 1:4){
subset = data[((i-1)*30+1):(i*30),]
for(j in temp){
mean = rbind(mean, colMeans(subset[subset$temp == j,1:9],na.rm = T))
sd = rbind(sd, apply(subset[subset$temp == j,1:9], 2, sd))
}
}
colnames(mean) = colnames(ODra_rep)
ODra_rep = rbind(ODra_rep, mean)
colnames(sd) = colnames(ODra_rep_sd)
ODra_rep_sd = rbind(ODra_rep_sd, sd)
ODra_rep$day = sort(rep(time[0:35],5))
ODra_rep_sd$day = sort(rep(time[0:35],5))
ODra_rep$temp = rep(temp,35)
ODra_rep_sd$temp = rep(temp,35)
sp_ra = c(sp[sort(rep(4:7,2))],sp[7])
spinside = c("S18", "W02", "S18", "W03", "W02", "W03", "S18", "W02", "W03")
colors_ra = c("darkgreen", "blue", "darkgreen", "chocolate2", "blue", "chocolate2", "darkgreen", "blue", "chocolate2")
View(Ramping_fat)
ODra_rep
View(ODra_rep)
View(ODra_rep[ODra_rep$temp == "10C",])
ODra_rep[ODra_rep$temp == "10C",][1:5,]
write.csv(ODra_rep[ODra_rep$temp == "10C",][1:5,], "../results/TPC/initial_biomass.csv", row.names=FALSE)
initial_biomass = ODra_rep[ODra_rep$temp == "10C",][1:5,]
View(initial_biomass)
View(r1)
initial_biomass = ODra_rep[ODra_rep$temp == "10C",][1:5,]
initial_biomass$day = c(0, 11.5, 24, 35.5, 45)
initial_biomass
names(initial_biomass$day)
colnames(initial_biomass$day)
names(initial_biomass$day)
colnames(initial_biomass[,10])
names(initial_biomass[,10])
initial_biomass[,10]
names(initial_biomass)
colnames(initial_biomass) = c("S18","W02","S18.1","W03","W02.1","W03.1","S18.2","W02.2","W03.2","day","temp")
colnames(initial_biomass) = c("S18","W02","S18.1","W03","W02.1","W03.1","S18.2","W02.2","W03.2","hour","temp")
initial_biomass = ODra_rep[ODra_rep$temp == "10C",][1:5,]
initial_biomass$day = c(0, 11.5, 24, 35.5, 45)
colnames(initial_biomass) = c("S18","W02","S18.1","W03","W02.1","W03.1","S18.2","W02.2","W03.2","hour","temp")
write.csv(initial_biomass, "../results/TPC/initial_biomass.csv", row.names=FALSE)
### interaction data from day0 to day4
initial_biomass = ODra_rep[ODra_rep$temp == "10C",][1:5,]
initial_biomass$day = c(0, 11.5, 24, 35.5, 45)
colnames(initial_biomass) = c("S18","W02","S18.1","W03","W02.1","W03.1","S18.2","W02.2","W03.2","hour","temp")
write.csv(initial_biomass, "../results/TPC/initial_biomass.csv", row.names=FALSE)
### interaction data from day0 to day4
ref_biomass = ODra_rep[ODra_rep$temp == "10C",][1:5,]
ref_biomass$day = c(0, 11.5, 24, 35.5, 45)
### interaction data from day0 to day4
ref_biomass = ODra_rep[ODra_rep$temp == "10C",][1:5,]
ref_biomass$day = c(0, 11.5, 24, 35.5, 45)
colnames(initial_biomass) = c("S18","W02","S18.1","W03","W02.1","W03.1","S18.2","W02.2","W03.2","hour","temp")
colnames(ref_biomass) = c("S18","W02","S18.1","W03","W02.1","W03.1","S18.2","W02.2","W03.2","hour","temp")
ref_biomass = ODra_rep[ODra_rep$temp == "10C",][1:5,]
ref_biomass$day = c(0, 11.5, 24, 35.5, 45)
colnames(ref_biomass) = c("S18","W02","S18.1","W03","W02.1","W03.1","S18.2","W02.2","W03.2","hour","temp")
write.csv(ref_biomass, "../results/TPC/ref_biomass.csv", row.names=FALSE)
View(Day2)
View(abs_od)
