sub_sd = subset(ra_data_sd, ra_data_sd$sp_group ==  (4*(i -3))|ra_data_sd$sp_group == (4*(i -3)+1)|ra_data_sd$sp_group == (4*(i -3)+2)|ra_data_sd$sp_group == (4*(i -3)+3))
rep_sub = do.call("rbind",replicate(4, ra_sub,simplify = F))
}
ra_OD = rbind(ra_OD, sub[,1:9]*rep_sub[1:9])
ra_OD_sd = rbind(ra_OD_sd, sub_sd[,1:9]*rep_sub[1:9])
}
names(ra_OD) = names(ra_mean[,1:9])
ra_data
######################## Mean and standard deviation ####################
data = data.frame()
sd = data.frame()
for(j in 4:11){
d = c()
e = c()
for(i in 1:(35*5)){ # 35 plate readings * 5 treatments
d = c(d,mean(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
e = c(e,sd(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
}
data = rbind(data,d)
sd = rbind(sd, e)
}
data = as.data.frame(t(data))
row.names(data) = seq(1,(35*5))
data = data[,-2]
sd = as.data.frame(t(sd))
row.names(sd) = seq(1,(35*5))
sd = sd[,-2]
##################### relative abundance with growth OD #################
# Initial
ra_data = data[,4:10]
ra_data_sd = sd[,4:9]
View(data)
Ramping = rbind(r1,r2,r3,r4)
Ramping = Ramping[!is.na(Ramping$X.11),] # removing rows without data
Ramping = Ramping[,-1] # removing numbering col
Ramping = Ramping[,-ncol(Ramping)] # removing wavelength col
names(Ramping) = seq(1,ncol(Ramping))
######################## Mean and standard deviation ####################
data = data.frame()
sd = data.frame()
for(j in 4:11){
d = c()
e = c()
for(i in 1:(35*5)){ # 35 plate readings * 5 treatments
d = c(d,mean(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
e = c(e,sd(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
}
data = rbind(data,d)
sd = rbind(sd, e)
}
data = as.data.frame(t(data))
row.names(data) = seq(1,(35*5))
data = data[,-2]
sd = as.data.frame(t(sd))
row.names(sd) = seq(1,(35*5))
sd = sd[,-2]
##################### relative abundance with growth OD #################
# Initial
ra_data = data[,4:10]
ra_data_sd = sd[,4:9]
ra_data = data.frame(replicate(2, ra_data[,1],simplify = F),
replicate(2, ra_data[,2],simplify = F),
replicate(2, ra_data[,3],simplify = F),
replicate(3, ra_data[,4],simplify = F),data[,8:10])
View(data)
######################## Mean and standard deviation ####################
data = data.frame()
sd = data.frame()
for(j in 4:11){
d = c()
e = c()
for(i in 1:(35*5)){ # 35 plate readings * 5 treatments
d = c(d,mean(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
e = c(e,sd(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
}
data = rbind(data,d)
sd = rbind(sd, e)
}
data = as.data.frame(t(data))
row.names(data) = seq(1,(35*5))
data = data[,-2]
sd = as.data.frame(t(sd))
row.names(sd) = seq(1,(35*5))
sd = sd[,-2]
######################## Mean and standard deviation ####################
data = data.frame()
sd = data.frame()
for(j in 4:11){
d = c()
e = c()
for(i in 1:(35*5)){ # 35 plate readings * 5 treatments
d = c(d,mean(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
e = c(e,sd(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
}
data = rbind(data,d)
sd = rbind(sd, e)
}
data = as.data.frame(t(data))
row.names(data) = seq(1,(35*5))
data = data[,-2]
sd = as.data.frame(t(sd))
row.names(sd) = seq(1,(35*5))
sd = sd[,-2]
############################ Plotting OD ##############################
time = c(0,1,2,3,4,4,5,6,6,7,8,8,9,10,10,11,12,12,13,14,14,15,16,16,17,18,18,19,20,20,21,22,22,23,24)
sp = c("S18", "W02", "W03", "S18+W02", "S18+W03", "W02+W03", "All")
temp = c("10C","10_30C","20C","30C","Ramping")
color = c("blue","yellow", "darkorange", "brown", "black")
names(data) = sp
names(sd) = sp
data$temp = rep(temp, 35)
sd$temp = rep(temp,35)
data$day = sort(rep(time, 5))
sd$day = sort(rep(time,5))
data$sp_group = sort(rep(1:35,5))
pdf("../results/Ramping_OD_bytemp_20J.pdf")
for(i in 1:7){ # Species
# png(filename = paste(("../results/Ramping_OD_bytemp/OD_temp_"),sp[i],".png", sep=""), width = 480, height = 480)
plot(1, type="n", xlab="Day", ylab = "OD",
main = sp[i], xlim = c(time[1],time[length(time)]),
ylim =c(min(data[1:175,(8-i)]-sd[1:175,(8-i)]),max(data[1:175,(8-i)]+sd[1:175,(8-i)])))
for(j in 1:5){ # temperature treatment
# if(j == 3| j == 2){
lines(time, data[seq(j,175,5),(8-i)], col = color[j], type="b", pch = 1)
arrows(x0=time, y0=data[seq(j,175,5),(8-i)]-sd[seq(j,175,5),(8-i)],
x1=time, y1=data[seq(j,175,5),(8-i)]+sd[seq(j,175,5),(8-i)],
code=3, angle=90, lwd=1, length = 0.05, col = color[j])
# }
}
abline(v = 13, lty = 3)
legend("topleft", c(temp[3],temp[2]), cex = 1, col = c(color[3],color[2]), pch = 1, lwd = 1)
# graphics.off()
}
graphics.off()
##################### relative abundance with growth OD #################
# Initial
ra_data = data[,4:10]
ra_data_sd = sd[,4:9]
ra_data = data.frame(replicate(2, ra_data[,1],simplify = F),
replicate(2, ra_data[,2],simplify = F),
replicate(2, ra_data[,3],simplify = F),
replicate(3, ra_data[,4],simplify = F),data[,8:10])
ra_data_sd = data.frame(replicate(2, ra_data_sd[,1],simplify = F),
replicate(2, ra_data_sd[,2],simplify = F),
replicate(2, ra_data_sd[,3],simplify = F),
replicate(3, ra_data_sd[,4],simplify = F),data[,8:10])
ra_OD = data.frame()
ra_OD_sd = data.frame()
for(i in 1:length(unique(ra_mean$day))){
ra_sub = subset(ra_mean, ra_mean$day == unique(ra_mean$day)[i])
if(i<10){
sub = subset(ra_data, ra_data$sp_group == (3*(i -1)+1)|ra_data$sp_group == (3*i-1)|ra_data$sp_group == (3*i))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group == (3*(i -1)+1)|ra_data_sd$sp_group == (3*i-1)|ra_data_sd$sp_group == (3*i))
rep_sub = do.call("rbind",replicate(3, ra_sub,simplify = F))
}
else{
sub = subset(ra_data, ra_data$sp_group == (4*(i -3))|ra_data$sp_group == (4*(i -3)+1)|ra_data$sp_group == (4*(i -3)+2)|ra_data$sp_group == (4*(i -3)+3))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group ==  (4*(i -3))|ra_data_sd$sp_group == (4*(i -3)+1)|ra_data_sd$sp_group == (4*(i -3)+2)|ra_data_sd$sp_group == (4*(i -3)+3))
rep_sub = do.call("rbind",replicate(4, ra_sub,simplify = F))
}
ra_OD = rbind(ra_OD, sub[,1:9]*rep_sub[1:9])
ra_OD_sd = rbind(ra_OD_sd, sub_sd[,1:9]*rep_sub[1:9])
}
names(ra_OD) = names(ra_mean[,1:9])
names(ra_OD_sd) = names(ra_mean[,1:9])
ra_OD = cbind(ra_OD, data[,8:10])
ra_OD_sd = cbind(ra_OD_sd, data[,8:10])
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
sub = ra_OD[seq(i,175,5),sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min(sub, na.rm = T), max(sub, na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
sp_ra
View(ra_OD)
sp_group
j
unique(sp_ra)
which(sp_ra == unique(sp_ra)[j])
temp
sp_ra
sub = ODra_rep[seq(i,175,5),sp_ra_v]
View(sub)
sub = ODra_rep[seq(i,175,5),]
sub = ODra_rep[ODra_rep == temp,sp_ra_v]
i = temp[2]
i
sub = ODra_rep[ODra_rep == i,]
sub = ODra_rep[ODra_rep$temp == i,]
time
length(time)
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
temp
sp_ra
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
sub_sd
sub
j
length(unique(sp_ra))
for(i in 1:length(temp)){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", temp[i],sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
unique(sp_ra)
which(sp_ra == j)
sub
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1], code=3, angle=90, lwd=0.6, length = 0.05)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
arrows(x0=time, y0=sub[,2]-sub_sd[,2], x1=time, y1=sub[,2]+sub_sd[,2], code=3, angle=90, lwd=0.6, length = 0.05)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
arrows(x0=time, y0=sub[,3]-sub_sd[,3], x1=time, y1=sub[,3]+sub_sd[,3], code=3, angle=90, lwd=0.6, length = 0.05)
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][1])
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
arrows(x0=time, y0=sub[,2]-sub_sd[,2], x1=time, y1=sub[,2]+sub_sd[,2],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][2])
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
arrows(x0=time, y0=sub[,3]-sub_sd[,3], x1=time, y1=sub[,3]+sub_sd[,3],
code=3, angle=90, lwd=0.6, length = 0.05, col = colors_ra[sp_ra_v][3])
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][1])
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
arrows(x0=time, y0=sub[,2]-sub_sd[,2], x1=time, y1=sub[,2]+sub_sd[,2],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][2])
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
arrows(x0=time, y0=sub[,3]-sub_sd[,3], x1=time, y1=sub[,3]+sub_sd[,3],
code=3, angle=90, lwd=0.6, length = 0.05, col = colors_ra[sp_ra_v][3])
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
sp_ra = c(sp[sort(rep(4:7,2))],sp[7])
spinside = c("S18", "W02", "S18", "W03", "W02", "W03", "S18", "W02", "W03")
colors_ra = c("darkgreen", "blue", "darkgreen", "chocolate2", "blue", "chocolate2", "darkgreen", "blue", "chocolate2")
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][1])
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
arrows(x0=time, y0=sub[,2]-sub_sd[,2], x1=time, y1=sub[,2]+sub_sd[,2],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][2])
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
arrows(x0=time, y0=sub[,3]-sub_sd[,3], x1=time, y1=sub[,3]+sub_sd[,3],
code=3, angle=90, lwd=0.6, length = 0.05, col = colors_ra[sp_ra_v][3])
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd))))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][1])
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
arrows(x0=time, y0=sub[,2]-sub_sd[,2], x1=time, y1=sub[,2]+sub_sd[,2],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][2])
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
arrows(x0=time, y0=sub[,3]-sub_sd[,3], x1=time, y1=sub[,3]+sub_sd[,3],
code=3, angle=90, lwd=0.6, length = 0.05, col = colors_ra[sp_ra_v][3])
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][1])
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
arrows(x0=time, y0=sub[,2]-sub_sd[,2], x1=time, y1=sub[,2]+sub_sd[,2],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][2])
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
arrows(x0=time, y0=sub[,3]-sub_sd[,3], x1=time, y1=sub[,3]+sub_sd[,3],
code=3, angle=90, lwd=0.6, length = 0.05, col = colors_ra[sp_ra_v][3])
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
unique(sp_ra)
j = unique(sp_ra)[2]
i = temp[3]
i
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
(sub-sub_sd)
min((sub-sub_sd), na.rm = T)
(sub+sub_sd)
max((sub+sub_sd), na.rm = T)
j
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][1])
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max((sub+sub_sd), na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
sub[,1]
max((sub+sub_sd), na.rm = T)
sub_sd[,1]
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max(sub, na.rm = T)+max(sub_sd,na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][1])
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
arrows(x0=time, y0=sub[,2]-sub_sd[,2], x1=time, y1=sub[,2]+sub_sd[,2],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][2])
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
arrows(x0=time, y0=sub[,3]-sub_sd[,3], x1=time, y1=sub[,3]+sub_sd[,3],
code=3, angle=90, lwd=0.6, length = 0.05, col = colors_ra[sp_ra_v][3])
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
pdf("../results/Ramping_ra_OD_errbar.pdf")
for(i in temp){
for(j in unique(sp_ra)){
sp_ra_v = which(sp_ra == j)
sub = ODra_rep[ODra_rep$temp == i,sp_ra_v]
sub_sd = ODra_rep_sd[ODra_rep_sd$temp == i,sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(j,"_", i,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((sub-sub_sd), na.rm = T), max(sub, na.rm = T)+max(sub_sd,na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
arrows(x0=time, y0=sub[,1]-sub_sd[,1], x1=time, y1=sub[,1]+sub_sd[,1],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][1])
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
arrows(x0=time, y0=sub[,2]-sub_sd[,2], x1=time, y1=sub[,2]+sub_sd[,2],
code=3, angle=90, lwd=0.6, length = 0.05, colors_ra[sp_ra_v][2])
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
arrows(x0=time, y0=sub[,3]-sub_sd[,3], x1=time, y1=sub[,3]+sub_sd[,3],
code=3, angle=90, lwd=0.6, length = 0.05, col = colors_ra[sp_ra_v][3])
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
graphics.off()
