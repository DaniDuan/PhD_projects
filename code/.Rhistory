r_max_start = slope_max[s]
t_lag_start = time[which.max(diff(diff(subset[,s])))] - time[1]
if(t_lag_start>40 || t_lag_start == 0){t_lag_start = 10}
sub = data.frame(subset[,s], subset$time)
names(sub) = c("N", "time")
# if(any(is.na(subset[,s]))){sub = sub[-is.na(sub),]}
model_fit = nlsLM(N~gompertz_model(t = time, r_max, K, N_0, t_lag), sub,
list(t_lag=t_lag_start, r_max=r_max_start,
N_0 = N_0_start, K = K_start), control = list(maxiter = 500))
gr = gompertz_model(t, summary(model_fit)$coefficients[2],
summary(model_fit)$coefficients[4],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[1])
r_value = summary(model_fit)$coefficients[2]
Model = "Gompertz"
if(r_value > 1){
# sub = sub[-1,]
model_fit = nlsLM(N~logistic_model(t = time, r_max, K, N_0), sub,
list(r_max=r_max_start, N_0 = N_0_start, K = K_start),
control = list(maxiter = 500))
gr = logistic_model(t, summary(model_fit)$coefficients[1],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[2])
r_value = summary(model_fit)$coefficients[1]
Model = "Logistic"
}
plot(time,subset[,s], xlab = "Hour", ylab = "log(OD)",
main = paste(sp[s],"_",i,"_",rep,sep="") , pch = 1)
text(60, ((max(subset[,s], na.rm = T)+min(subset[,s], na.rm = T))/2),
paste("r=",round(r_value,3), "\nAIC=",
round(AIC(model_fit),3), "\nModel= ",
Model, sep=""))
lines(t, gr)
# r = c(r, coef(model_fit)[paste("r_max.",sp[s], sep="")])
}
# all_r = rbind(all_r, r)
}
}
# S18, 12C
graphics.off()
pdf("../results/TPCfitting_single_allreps.pdf")
# all_r = data.frame()
for(i in temp){
for(rep in 1:6){
subset = subset(TPC, temp == i & Rep == rep)
subset[,1:3] = log(subset[,1:3])
subset[subset == -Inf| subset == Inf] = NaN
if(i == 28){
subset[6:9,1] = NaN
}
N_0_get = apply(subset[1:3], 2, min, na.rm =T) # minimum
K_get = apply(subset[1:3], 2, max, na.rm =T)
slopes = apply(subset[1:3], 2, diff)
slope_max = apply(slopes[-1,], 2, max, na.rm =T)
# r = c()
for(s in 1:length(sp)){
while(any(is.na(subset[,s]))){
subset[which(is.na(subset[,s])),s] = subset[(which(is.na(subset[,s]))+1),s]
}
N_0_start = N_0_get[s]
K_start = K_get[s]
r_max_start = slope_max[s]
t_lag_start = time[which.max(diff(diff(subset[,s])))] - time[1]
if(t_lag_start>40 || t_lag_start == 0){t_lag_start = 10}
sub = data.frame(subset[,s], subset$time)
names(sub) = c("N", "time")
# if(any(is.na(subset[,s]))){sub = sub[-is.na(sub),]}
model_fit = nlsLM(N~gompertz_model(t = time, r_max, K, N_0, t_lag), sub,
list(t_lag=t_lag_start, r_max=r_max_start,
N_0 = N_0_start, K = K_start), control = list(maxiter = 500))
gr = gompertz_model(t, summary(model_fit)$coefficients[2],
summary(model_fit)$coefficients[4],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[1])
r_value = summary(model_fit)$coefficients[2]
Model = "Gompertz"
if(r_value > 1.5){
# sub = sub[-1,]
model_fit = nlsLM(N~logistic_model(t = time, r_max, K, N_0), sub,
list(r_max=r_max_start, N_0 = N_0_start, K = K_start),
control = list(maxiter = 500))
gr = logistic_model(t, summary(model_fit)$coefficients[1],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[2])
r_value = summary(model_fit)$coefficients[1]
Model = "Logistic"
}
plot(time,subset[,s], xlab = "Hour", ylab = "log(OD)",
main = paste(sp[s],"_",i,"_",rep,sep="") , pch = 1)
text(60, ((max(subset[,s], na.rm = T)+min(subset[,s], na.rm = T))/2),
paste("r=",round(r_value,3), "\nAIC=",
round(AIC(model_fit),3), "\nModel= ",
Model, sep=""))
lines(t, gr)
# r = c(r, coef(model_fit)[paste("r_max.",sp[s], sep="")])
}
# all_r = rbind(all_r, r)
}
}
# S18, 12C
graphics.off()
pdf("../results/TPCfitting_single_allreps.pdf")
# all_r = data.frame()
for(i in temp){
for(rep in 1:6){
subset = subset(TPC, temp == i & Rep == rep)
subset[,1:3] = log(subset[,1:3])
subset[subset == -Inf| subset == Inf] = NaN
if(i == 28){
subset[6:9,1] = NaN
}
N_0_get = apply(subset[1:3], 2, min, na.rm =T) # minimum
K_get = apply(subset[1:3], 2, max, na.rm =T)
slopes = apply(subset[1:3], 2, diff)
slope_max = apply(slopes[-1,], 2, max, na.rm =T)
# r = c()
for(s in 1:length(sp)){
while(any(is.na(subset[,s]))){
subset[which(is.na(subset[,s])),s] = subset[(which(is.na(subset[,s]))+1),s]
}
N_0_start = N_0_get[s]
K_start = K_get[s]
r_max_start = slope_max[s]
t_lag_start = time[which.max(diff(diff(subset[,s])))] - time[1]
if(t_lag_start>40 || t_lag_start == 0){t_lag_start = 10}
sub = data.frame(subset[,s], subset$time)
names(sub) = c("N", "time")
# if(any(is.na(subset[,s]))){sub = sub[-is.na(sub),]}
model_fit = nlsLM(N~gompertz_model(t = time, r_max, K, N_0, t_lag), sub,
list(t_lag=t_lag_start, r_max=r_max_start,
N_0 = N_0_start, K = K_start), control = list(maxiter = 500))
gr = gompertz_model(t, summary(model_fit)$coefficients[2],
summary(model_fit)$coefficients[4],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[1])
r_value = summary(model_fit)$coefficients[2]
Model = "Gompertz"
if(r_value > 2){
# sub = sub[-1,]
model_fit = nlsLM(N~logistic_model(t = time, r_max, K, N_0), sub,
list(r_max=r_max_start, N_0 = N_0_start, K = K_start),
control = list(maxiter = 500))
gr = logistic_model(t, summary(model_fit)$coefficients[1],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[2])
r_value = summary(model_fit)$coefficients[1]
Model = "Logistic"
}
plot(time,subset[,s], xlab = "Hour", ylab = "log(OD)",
main = paste(sp[s],"_",i,"_",rep,sep="") , pch = 1)
text(60, ((max(subset[,s], na.rm = T)+min(subset[,s], na.rm = T))/2),
paste("r=",round(r_value,3), "\nAIC=",
round(AIC(model_fit),3), "\nModel= ",
Model, sep=""))
lines(t, gr)
# r = c(r, coef(model_fit)[paste("r_max.",sp[s], sep="")])
}
# all_r = rbind(all_r, r)
}
}
# S18, 12C
graphics.off()
# all_r = data.frame()
for(i in temp){
for(rep in 1:6){
subset = subset(TPC, temp == i & Rep == rep)
subset[,1:3] = log(subset[,1:3])
subset[subset == -Inf| subset == Inf] = NaN
if(i == 28){
subset[6:9,1] = NaN
}
N_0_get = apply(subset[1:3], 2, min, na.rm =T) # minimum
K_get = apply(subset[1:3], 2, max, na.rm =T)
slopes = apply(subset[1:3], 2, diff)
slope_max = apply(slopes[-1,], 2, max, na.rm =T)
r = c()
for(s in 1:length(sp)){
while(any(is.na(subset[,s]))){
subset[which(is.na(subset[,s])),s] = subset[(which(is.na(subset[,s]))+1),s]
}
N_0_start = N_0_get[s]
K_start = K_get[s]
r_max_start = slope_max[s]
t_lag_start = time[which.max(diff(diff(subset[,s])))] - time[1]
if(t_lag_start>40 || t_lag_start == 0){t_lag_start = 10}
sub = data.frame(subset[,s], subset$time)
names(sub) = c("N", "time")
# if(any(is.na(subset[,s]))){sub = sub[-is.na(sub),]}
model_fit = nlsLM(N~gompertz_model(t = time, r_max, K, N_0, t_lag), sub,
list(t_lag=t_lag_start, r_max=r_max_start,
N_0 = N_0_start, K = K_start), control = list(maxiter = 500))
gr = gompertz_model(t, summary(model_fit)$coefficients[2],
summary(model_fit)$coefficients[4],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[1])
r_value = summary(model_fit)$coefficients[2]
Model = "Gompertz"
if(r_value > 2){
# sub = sub[-1,]
model_fit = nlsLM(N~logistic_model(t = time, r_max, K, N_0), sub,
list(r_max=r_max_start, N_0 = N_0_start, K = K_start),
control = list(maxiter = 500))
gr = logistic_model(t, summary(model_fit)$coefficients[1],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[2])
r_value = summary(model_fit)$coefficients[1]
Model = "Logistic"
}
plot(time,subset[,s], xlab = "Hour", ylab = "log(OD)",
main = paste(sp[s],"_",i,"_",rep,sep="") , pch = 1)
text(60, ((max(subset[,s], na.rm = T)+min(subset[,s], na.rm = T))/2),
paste("r=",round(r_value,3), "\nAIC=",
round(AIC(model_fit),3), "\nModel= ",
Model, sep=""))
lines(t, gr)
r = c(r, r_value)
}
all_r = rbind(all_r, r)
}
}
all_r
all_r = data.frame()
# all_r = data.frame()
for(i in temp){
for(rep in 1:6){
subset = subset(TPC, temp == i & Rep == rep)
subset[,1:3] = log(subset[,1:3])
subset[subset == -Inf| subset == Inf] = NaN
if(i == 28){
subset[6:9,1] = NaN
}
N_0_get = apply(subset[1:3], 2, min, na.rm =T) # minimum
K_get = apply(subset[1:3], 2, max, na.rm =T)
slopes = apply(subset[1:3], 2, diff)
slope_max = apply(slopes[-1,], 2, max, na.rm =T)
r = c()
for(s in 1:length(sp)){
while(any(is.na(subset[,s]))){
subset[which(is.na(subset[,s])),s] = subset[(which(is.na(subset[,s]))+1),s]
}
N_0_start = N_0_get[s]
K_start = K_get[s]
r_max_start = slope_max[s]
t_lag_start = time[which.max(diff(diff(subset[,s])))] - time[1]
if(t_lag_start>40 || t_lag_start == 0){t_lag_start = 10}
sub = data.frame(subset[,s], subset$time)
names(sub) = c("N", "time")
# if(any(is.na(subset[,s]))){sub = sub[-is.na(sub),]}
model_fit = nlsLM(N~gompertz_model(t = time, r_max, K, N_0, t_lag), sub,
list(t_lag=t_lag_start, r_max=r_max_start,
N_0 = N_0_start, K = K_start), control = list(maxiter = 500))
gr = gompertz_model(t, summary(model_fit)$coefficients[2],
summary(model_fit)$coefficients[4],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[1])
r_value = summary(model_fit)$coefficients[2]
Model = "Gompertz"
if(r_value > 2){
# sub = sub[-1,]
model_fit = nlsLM(N~logistic_model(t = time, r_max, K, N_0), sub,
list(r_max=r_max_start, N_0 = N_0_start, K = K_start),
control = list(maxiter = 500))
gr = logistic_model(t, summary(model_fit)$coefficients[1],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[2])
r_value = summary(model_fit)$coefficients[1]
Model = "Logistic"
}
plot(time,subset[,s], xlab = "Hour", ylab = "log(OD)",
main = paste(sp[s],"_",i,"_",rep,sep="") , pch = 1)
text(60, ((max(subset[,s], na.rm = T)+min(subset[,s], na.rm = T))/2),
paste("r=",round(r_value,3), "\nAIC=",
round(AIC(model_fit),3), "\nModel= ",
Model, sep=""))
lines(t, gr)
r = c(r, r_value)
}
all_r = rbind(all_r, r)
}
}
View(all_r)
View(round(all_r),3)
# S18, 12C
graphics.off()
pdf("../results/TPCfitting_single_allreps.pdf")
all_r = data.frame()
for(i in temp){
for(rep in 1:6){
subset = subset(TPC, temp == i & Rep == rep)
subset[,1:3] = log(subset[,1:3])
subset[subset == -Inf| subset == Inf] = NaN
if(i == 28){
subset[6:9,1] = NaN
}
N_0_get = apply(subset[1:3], 2, min, na.rm =T) # minimum
K_get = apply(subset[1:3], 2, max, na.rm =T)
slopes = apply(subset[1:3], 2, diff)
slope_max = apply(slopes[-1,], 2, max, na.rm =T)
r = c()
for(s in 1:length(sp)){
while(any(is.na(subset[,s]))){
subset[which(is.na(subset[,s])),s] = subset[(which(is.na(subset[,s]))+1),s]
}
N_0_start = N_0_get[s]
K_start = K_get[s]
r_max_start = slope_max[s]
t_lag_start = time[which.max(diff(diff(subset[,s])))] - time[1]
if(t_lag_start>40 || t_lag_start == 0){t_lag_start = 10}
sub = data.frame(subset[,s], subset$time)
names(sub) = c("N", "time")
# if(any(is.na(subset[,s]))){sub = sub[-is.na(sub),]}
model_fit = nlsLM(N~gompertz_model(t = time, r_max, K, N_0, t_lag), sub,
list(t_lag=t_lag_start, r_max=r_max_start,
N_0 = N_0_start, K = K_start), control = list(maxiter = 500))
gr = gompertz_model(t, summary(model_fit)$coefficients[2],
summary(model_fit)$coefficients[4],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[1])
r_value = round(summary(model_fit)$coefficients[2],3)
Model = "Gompertz"
if(r_value > 2){
# sub = sub[-1,]
model_fit = nlsLM(N~logistic_model(t = time, r_max, K, N_0), sub,
list(r_max=r_max_start, N_0 = N_0_start, K = K_start),
control = list(maxiter = 500))
gr = logistic_model(t, summary(model_fit)$coefficients[1],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[2])
r_value = round(summary(model_fit)$coefficients[1], 3)
Model = "Logistic"
}
plot(time,subset[,s], xlab = "Hour", ylab = "log(OD)",
main = paste(sp[s],"_",i,"_",rep,sep="") , pch = 1)
text(60, ((max(subset[,s], na.rm = T)+min(subset[,s], na.rm = T))/2),
paste("r=",r_value, "\nAIC=",
round(AIC(model_fit),3), "\nModel= ",
Model, sep=""))
lines(t, gr)
r = c(r, r_value)
}
all_r = rbind(all_r, r)
}
}
# S18, 12C
graphics.off()
sp
names(all_r) = sp
rep(temp,6)
sort(rep(temp,6))
all_r$temp = sort(rep(temp,6))
all_r$Rep = rep(1:6,6)
pdf("../results/TPCfitting_single_allreps.pdf")
all_r = data.frame()
for(i in temp){
for(rep in 1:6){
subset = subset(TPC, temp == i & Rep == rep)
subset[,1:3] = log(subset[,1:3])
subset[subset == -Inf| subset == Inf] = NaN
if(i == 28){
subset[6:9,1] = NaN
}
N_0_get = apply(subset[1:3], 2, min, na.rm =T) # minimum
K_get = apply(subset[1:3], 2, max, na.rm =T)
slopes = apply(subset[1:3], 2, diff)
slope_max = apply(slopes[-1,], 2, max, na.rm =T)
r = c()
for(s in 1:length(sp)){
while(any(is.na(subset[,s]))){
subset[which(is.na(subset[,s])),s] = subset[(which(is.na(subset[,s]))+1),s]
}
N_0_start = N_0_get[s]
K_start = K_get[s]
r_max_start = slope_max[s]
t_lag_start = time[which.max(diff(diff(subset[,s])))] - time[1]
if(t_lag_start>40 || t_lag_start == 0){t_lag_start = 10}
sub = data.frame(subset[,s], subset$time)
names(sub) = c("N", "time")
# if(any(is.na(subset[,s]))){sub = sub[-is.na(sub),]}
model_fit = nlsLM(N~gompertz_model(t = time, r_max, K, N_0, t_lag), sub,
list(t_lag=t_lag_start, r_max=r_max_start,
N_0 = N_0_start, K = K_start), control = list(maxiter = 500))
gr = gompertz_model(t, summary(model_fit)$coefficients[2],
summary(model_fit)$coefficients[4],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[1])
r_value = round(summary(model_fit)$coefficients[2], 4)
Model = "Gompertz"
if(r_value > 2){
# sub = sub[-1,]
model_fit = nlsLM(N~logistic_model(t = time, r_max, K, N_0), sub,
list(r_max=r_max_start, N_0 = N_0_start, K = K_start),
control = list(maxiter = 500))
gr = logistic_model(t, summary(model_fit)$coefficients[1],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[2])
r_value = round(summary(model_fit)$coefficients[1], 4)
Model = "Logistic"
}
plot(time,subset[,s], xlab = "Hour", ylab = "log(OD)",
main = paste(sp[s],"_",i,"_",rep,sep="") , pch = 1)
text(60, ((max(subset[,s], na.rm = T)+min(subset[,s], na.rm = T))/2),
paste("r=",r_value, "\nAIC=",
round(AIC(model_fit),3), "\nModel= ",
Model, sep=""))
lines(t, gr)
r = c(r, r_value)
}
all_r = rbind(all_r, r)
}
}
# S18, 12C
graphics.off()
names(all_r) = sp
all_r$temp = sort(rep(temp,6))
all_r$Rep = rep(1:6,6)
write.csv(all_r, "../results/TPC/Growth_rates.csv", row.names = F)
pdf("../results/TPC/TPCfitting_single_allreps.pdf")
all_r = data.frame()
for(i in temp){
for(rep in 1:6){
subset = subset(TPC, temp == i & Rep == rep)
subset[,1:3] = log(subset[,1:3])
subset[subset == -Inf| subset == Inf] = NaN
if(i == 28){
subset[6:9,1] = NaN
}
N_0_get = apply(subset[1:3], 2, min, na.rm =T) # minimum
K_get = apply(subset[1:3], 2, max, na.rm =T)
slopes = apply(subset[1:3], 2, diff)
slope_max = apply(slopes[-1,], 2, max, na.rm =T)
r = c()
for(s in 1:length(sp)){
while(any(is.na(subset[,s]))){
subset[which(is.na(subset[,s])),s] = subset[(which(is.na(subset[,s]))+1),s]
}
N_0_start = N_0_get[s]
K_start = K_get[s]
r_max_start = slope_max[s]
t_lag_start = time[which.max(diff(diff(subset[,s])))] - time[1]
if(t_lag_start>40 || t_lag_start == 0){t_lag_start = 10}
sub = data.frame(subset[,s], subset$time)
names(sub) = c("N", "time")
# if(any(is.na(subset[,s]))){sub = sub[-is.na(sub),]}
model_fit = nlsLM(N~gompertz_model(t = time, r_max, K, N_0, t_lag), sub,
list(t_lag=t_lag_start, r_max=r_max_start,
N_0 = N_0_start, K = K_start), control = list(maxiter = 500))
gr = gompertz_model(t, summary(model_fit)$coefficients[2],
summary(model_fit)$coefficients[4],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[1])
r_value = round(summary(model_fit)$coefficients[2], 4)
Model = "Gompertz"
if(r_value > 2){
# sub = sub[-1,]
model_fit = nlsLM(N~logistic_model(t = time, r_max, K, N_0), sub,
list(r_max=r_max_start, N_0 = N_0_start, K = K_start),
control = list(maxiter = 500))
gr = logistic_model(t, summary(model_fit)$coefficients[1],
summary(model_fit)$coefficients[3],
summary(model_fit)$coefficients[2])
r_value = round(summary(model_fit)$coefficients[1], 4)
Model = "Logistic"
}
plot(time,subset[,s], xlab = "Hour", ylab = "log(OD)",
main = paste(sp[s],"_",i,"_",rep,sep="") , pch = 1)
text(60, ((max(subset[,s], na.rm = T)+min(subset[,s], na.rm = T))/2),
paste("r=",r_value, "\nAIC=",
round(AIC(model_fit),3), "\nModel= ",
Model, sep=""))
lines(t, gr)
r = c(r, r_value)
}
all_r = rbind(all_r, r)
}
}
# S18, 12C
graphics.off()
names(all_r) = sp
all_r$temp = sort(rep(temp,6))
all_r$Rep = rep(1:6,6)
write.csv(all_r, "../results/TPC/Growth_rates.csv", row.names = F)
pdf("../results/TPC/TPC_single.pdf")
for(i in temp){
m_subset = subset(mean, temp == i)
sd_subset = subset(sd, temp == i)
for(j in 1:length(unique(sp))){
# png(filename = paste(("../results/TPC/"),sp[j],"_",i,".png", sep=""), width = 480, height = 480)
plot(1, type="n", xlab="Hour", ylab = "OD",
main = paste(sp[j],"_", i, "C" ,sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min((m_subset[,j]-sd_subset[,j]), na.rm = T),
max(m_subset[,j], na.rm = T)+max(sd_subset[,j],na.rm = T)))
points(time,m_subset[,j], pch = 1)
# lines(time,m_subset[,j], type="b", pch = 1)
arrows(x0=time, y0=m_subset[,j]-sd_subset[,j], x1=time, y1=m_subset[,j]+sd_subset[,j],
code=3, angle=90, lwd=0.6, length = 0.05)
# graphics.off()
}
}
graphics.off()
pdf("../results/TPC/TPC_single_allreps.pdf")
for(i in temp){
for(rep in 1:6){
subset = subset(TPC, temp == i & Rep == rep)
subset[,1:3] = log(subset[,1:3])
subset[subset == -Inf| subset == Inf] = NaN
for(s in 1:length(sp)){
plot(time,subset[,s], xlab = "Hour", ylab = "log(OD)",main = paste(sp[s],"_",i,"_",rep,sep="") , pch = 1)
}
}
}
graphics.off()
