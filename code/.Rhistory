# points(ra_time,ra_mean[(11*(i-1)+1):(11*i),2], col = "blue")
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),2], col = "blue",  type="b", pch = 1)
color_by_sp = c("darkgreen", "blue", "chocolate2", "darkblue", "burlywood4", "blueviolet", "black")
pch_by_sp = c(1,1,1,2,4,5,3)
plot(1, type="n", xlab="Temps", ylab = "Growth Rate (Day)",
main = "Initial Growth Rates", xlim = c(10,30),
ylim =c(min(all_means),max(all_means)))
for(s in 1:7){
lines(c(10,20,30),all_means[(3*(s-1)+1) : (3*(s-1)+3)], col = color_by_sp[s],
pch = pch_by_sp[s] ,lwd = 2, type="b")
# arrows(x0=c(10,20,30),
#        y0=all_means[(3*(s-1)+1) : (3*(s-1)+3)] - all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        x1=c(10,20,30),
#        y1=all_means[(3*(s-1)+1) : (3*(s-1)+3)] + all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        code=3, angle=90, lwd=1, length = 0.05, col = color_by_sp[s])
}
color_by_sp = c("darkgreen", "blue", "chocolate2", "darkblue", "burlywood4", "blueviolet", "black")
pch_by_sp = c(1,1,1,2,4,5,3)
plot(1, type="n", xlab="Temps", ylab = "Growth Rate (Day)",
main = "Initial Growth Rates", xlim = c(10,30),
ylim =c(min(all_means),max(all_means)))
for(s in 1:7){
lines(c(10,20,30),all_means[(3*(s-1)+1) : (3*(s-1)+3)], col = color_by_sp[s],
pch = pch_by_sp[s] ,lwd = 1, type="b")
# arrows(x0=c(10,20,30),
#        y0=all_means[(3*(s-1)+1) : (3*(s-1)+3)] - all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        x1=c(10,20,30),
#        y1=all_means[(3*(s-1)+1) : (3*(s-1)+3)] + all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        code=3, angle=90, lwd=1, length = 0.05, col = color_by_sp[s])
}
legend("topright", sp, cex = 1, col = color_by_sp, pch = pch_by_sp, bty="n",
ncol = 2, lwd = 1, inset=c(-0.05,-0.225), xpd = T)
# png(filename = paste(("../results/Ramping_initial_bytemp/initial_temp_"),sp[i],".png", sep=""), width = 480, height = 480)
plot(1, type="n", xlab="Day", ylab = "OD",
main = sp[i], xlim = c(time[1],time[5]),
ylim =c(min(data[1:30,(8-i)]-sd[1:30,(8-i)]),max(data[1:30,(8-i)]+sd[1:30,(8-i)])))
lines(time[1:5], data[seq(j,25,5),(8-i)], col = color[j], type="b", pch = 1)
for(i in 1:7){
# png(filename = paste(("../results/Ramping_initial_bytemp/initial_temp_"),sp[i],".png", sep=""), width = 480, height = 480)
plot(1, type="n", xlab="Day", ylab = "OD",
main = sp[i], xlim = c(time[1],time[5]),
ylim =c(min(data[1:30,(8-i)]-sd[1:30,(8-i)]),max(data[1:30,(8-i)]+sd[1:30,(8-i)])))
for(j in 1:5){
if(j == 1|j == 3| j == 4){
lines(time[1:5], data[seq(j,25,5),(8-i)], col = color[j], type="b", pch = 1)
arrows(x0=time[1:5], y0=data[seq(j,25,5),(8-i)]-sd[seq(j,25,5),(8-i)],
x1=time[1:5], y1=data[seq(j,25,5),(8-i)]+sd[seq(j,25,5),(8-i)],
code=3, angle=90, lwd=1, length = 0.05, col = color[j])
}
legend("topleft", c("10C", "20C", "30C"), cex = 1, col = color, pch = 1, lwd = 1)
}
# graphics.off()
}
rm(list=ls())
dev.off()
r1 = read.csv("../data/Ramping/OD_readings/Danica_Ramping_rr1.csv")
r2 = read.csv("../data/Ramping/OD_readings/Danica_Ramping_rr2.csv")
r3 = read.csv("../data/Ramping/OD_readings/Danica_Ramping_rr3.csv")
r4 = read.csv("../data/Ramping/OD_readings/Danica_Ramping_rr4.csv")
Ramping = rbind(r1,r2,r3,r4)
Ramping = Ramping[!is.na(Ramping$X.11),] # removing rows without data
Ramping = Ramping[,-1] # removing numbering col
Ramping = Ramping[,-ncol(Ramping)] # removing wavelength col
names(Ramping) = seq(1,ncol(Ramping))
############################## Mean and standard deviation ################
data = data.frame()
sd = data.frame()
for(j in 4:11){
d = c()
e = c()
for(i in 1:(35*5)){ # 35 plate readings * 5 treatments
d = c(d,mean(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
e = c(e,sd(Ramping[seq((i-1)*8+2, i*8-1),j] - Ramping[seq((i-1)*8+2, i*8-1),5], na.rm = T))
}
data = rbind(data,d)
sd = rbind(sd, e)
}
data = t(data)
row.names(data) = seq(1,(35*5))
data = data[,-2]
sd = t(sd)
row.names(sd) = seq(1,(35*5))
sd = sd[,-2]
############################ Plotting OD ##############################
time = c(0,1,2,3,4,4,5,6,6,7,8,8,9,10,10,11,12,12,13,14,14,15,16,16,17,18,18,19,20,20,21,22,22,23,24)
sp = c("S18", "W02", "W03", "S18+W02", "S18+W03", "W02+W03", "All")
temp = c("10C","10_30C","20C","30C","Ramping")
color = c("blue","yellow", "darkorange", "brown", "black")
# pdf("../results/Ramping_OD.pdf")
# for(i in 1:7){
#   for(j in 1:5){
#     plot(time, data[seq(j,175,5),(8-i)], main = paste(sp[i],"_",temp[j]), xlab = "Day", ylab = "OD", ylim =c(min(data[seq(j,175,5),(8-i)]-sd[seq(j,175,5),(8-i)]),max(data[seq(j,175,5),(8-i)]+sd[seq(j,175,5),(8-i)])))
#     arrows(x0=time, y0=data[seq(j,175,5),(8-i)]-sd[seq(j,175,5),(8-i)], x1=time, y1=data[seq(j,175,5),(8-i)]+sd[seq(j,175,5),(8-i)], code=3, angle=90, lwd=0.6, length = 0.05)
#   }
# }
# graphics.off()
pdf("../results/Ramping_OD_bytemp.pdf")
for(i in 1:7){
# png(filename = paste(("../results/Ramping_OD_bytemp/OD_temp_"),sp[i],".png", sep=""), width = 480, height = 480)
plot(1, type="n", xlab="Day", ylab = "OD",
main = sp[i], xlim = c(time[1],time[length(time)]),
ylim =c(min(data[1:175,(8-i)]-sd[1:175,(8-i)]),max(data[1:175,(8-i)]+sd[1:175,(8-i)])))
for(j in 1:5){
lines(time, data[seq(j,175,5),(8-i)], col = color[j], type="b", pch = 1)
arrows(x0=time, y0=data[seq(j,175,5),(8-i)]-sd[seq(j,175,5),(8-i)],
x1=time, y1=data[seq(j,175,5),(8-i)]+sd[seq(j,175,5),(8-i)],
code=3, angle=90, lwd=1, length = 0.05, col = color[j])
}
abline(v = 13, lty = 3)
legend("topleft", c("10C","10_30C", "20C", "30C", "Ramping"), cex = 1,
col = color, pch = 1, lwd = 1)
# graphics.off()
}
graphics.off()
######################### Initial growth ############################
# pdf("../results/Ramping_initial.pdf")
# for(i in 1:7){
#   for(j in 1:5){
#     if(j == 1|j == 3| j == 4){
#       plot(time[1:5], data[seq(j,25,5),(8-i)], main = paste(sp[i],"_",temp[j]), xlab = "Day", ylab = "OD", ylim =c(min(data[seq(j,25,5),(8-i)]-sd[seq(j,25,5),(8-i)]),max(data[seq(j,25,5),(8-i)]+sd[seq(j,25,5),(8-i)])))
#       arrows(x0=time[1:5], y0=data[seq(j,25,5),(8-i)]-sd[seq(j,25,5),(8-i)], x1=time[1:5], y1=data[seq(j,25,5),(8-i)]+sd[seq(j,25,5),(8-i)], code=3, angle=90, lwd=0.6, length = 0.05)
#     }
#   }
# }
# graphics.off()
pdf("../results/Ramping_initial_bytemp.pdf")
for(i in 1:7){
# png(filename = paste(("../results/Ramping_initial_bytemp/initial_temp_"),sp[i],".png", sep=""), width = 480, height = 480)
plot(1, type="n", xlab="Day", ylab = "OD",
main = sp[i], xlim = c(time[1],time[5]),
ylim =c(min(data[1:30,(8-i)]-sd[1:30,(8-i)]),max(data[1:30,(8-i)]+sd[1:30,(8-i)])))
for(j in 1:5){
if(j == 1|j == 3| j == 4){
lines(time[1:5], data[seq(j,25,5),(8-i)], col = color[j], type="b", pch = 1)
arrows(x0=time[1:5], y0=data[seq(j,25,5),(8-i)]-sd[seq(j,25,5),(8-i)],
x1=time[1:5], y1=data[seq(j,25,5),(8-i)]+sd[seq(j,25,5),(8-i)],
code=3, angle=90, lwd=1, length = 0.05, col = color[j])
}
legend("topleft", c("10C", "20C", "30C"), cex = 1, col = color, pch = 1, lwd = 1)
}
# graphics.off()
}
graphics.off()
####################### Initial growth rate ###########################
log_od = data.frame()
for(i in 1:25){
log_od= rbind(log_od, log(Ramping[seq((i-1)*8+2, i*8-1), 4:11] - mean(Ramping[seq((i-1)*8+2, i*8-1), 5], na.rm = T)))
}
# log_od[is.na(log_od)] = 0
# log_od[log_od == -Inf] = 0
log_od = log_od[-2]
# for(s in 1:7){
#   for (reps in 1:30) { # 6 reps * 5 treatments
#       plot(1, type="n", xlab="Day", ylab = "log(OD)",
#            main = paste(sp[s], "_", reps, sep = ""), xlim = c(time[1],time[5]),
#            ylim =c(-9, 0))
#       for(t in 1:5){
#         points(time[t], log_od[(30*(t - 1)+reps), s])
#     }
#   }
# }
r_data = data.frame()
for(s in 1:7){
for (reps in 1:30) { # 6 reps * 5 treatments
dp = c()
for(t in 1:5){
dp = c(dp, log_od[(30*(t - 1)+reps), s])
}
r_data = rbind(r_data, dp)
}
}
names(r_data) = time[1:5]
pdf("../results/ramping_initial_all_reps.pdf")
data_123 = data.frame()
for(s in 1:7){
for(i in 1:5){
if(i == 1 || i == 3|| i == 4){
r_123 = r_data[((s-1)*30+(i-1)*6+1) :((s-1)*30+6*i),]
data_123 = rbind(data_123, r_123) # 6 replicates in 3 temperatures in 7 species groups
for(reps in 1:6){
plot(time[1:5], r_123[reps,], xlab = "Day", ylab = "log(OD)",
main = paste(sp[s], "_", temp[i],"_",reps, sep = ""), type = "o")
}
}
}
}
graphics.off()
# getting the highest slope as growth rate
slopes = data.frame(matrix(NA, nrow = nrow(data_123), ncol = 0))
for(i in 1:4){
slopes = cbind(slopes, data_123[,i+1] - data_123[,i])
}
r = apply(slopes, 1, max, na.rm =T)
all_means = c()
all_sd = c()
for(i in 1:(3*7)){
all_means = c(all_means, mean(r[(6*(i-1)+1):(6*i)], na.rm = T))
all_sd = c(all_sd, sd(r[(6*(i-1)+1):(6*i)], na.rm = T))
}
all_sd[is.na(all_sd)] = 0
pdf("../results/Ramping_initial_gr_bytemp.pdf")
color_by_sp = c("darkgreen", "blue", "chocolate2", "darkblue", "burlywood4", "blueviolet", "black")
pch_by_sp = c(1,1,1,2,4,5,3)
plot(1, type="n", xlab="Temps", ylab = "Growth Rate (Day)",
main = "Initial Growth Rates", xlim = c(10,30),
ylim =c(min(all_means),max(all_means)))
for(s in 1:7){
lines(c(10,20,30),all_means[(3*(s-1)+1) : (3*(s-1)+3)], col = color_by_sp[s],
pch = pch_by_sp[s] ,lwd = 1, type="b")
# arrows(x0=c(10,20,30),
#        y0=all_means[(3*(s-1)+1) : (3*(s-1)+3)] - all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        x1=c(10,20,30),
#        y1=all_means[(3*(s-1)+1) : (3*(s-1)+3)] + all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        code=3, angle=90, lwd=1, length = 0.05, col = color_by_sp[s])
}
legend("topright", sp, cex = 1, col = color_by_sp, pch = pch_by_sp, bty="n",
ncol = 2, lwd = 1, inset=c(-0.05,-0.225), xpd = T)
graphics.off()
######################### Plotting growth rate for all #######################
### initial growth rate for all treatments
data_in = data.frame()
for(s in 1:7){
for(i in 1:5){
r_all = r_data[((s-1)*30+(i-1)*6+1) :((s-1)*30+6*i),]
data_in = rbind(data_in, r_all) # 6 replicates in 5 treatments in 7 species groups
}
}
# getting the highest slope as growth rate
slopes_in = data.frame(matrix(NA, nrow = nrow(data_in), ncol = 0))
for(i in 1:4){
slopes_in = cbind(slopes_in, data_in[,i+1] - data_in[,i])
}
r_in = apply(slopes_in, 1, max, na.rm =T)
in_means = c()
in_sd = c()
for(i in 1:(5*7)){
in_means = c(in_means, mean(r_in[(6*(i-1)+1):(6*i)], na.rm = T))
in_sd = c(in_sd, sd(r_in[(6*(i-1)+1):(6*i)], na.rm = T))
}
in_sd[is.na(in_sd)] = 0
in_gr = data.frame()
for(s in 1:7){ # 5 treatments, 7 species groups
in_gr = rbind(in_gr,in_means[(5*(s-1)+1) : (5*(s-1)+5)])
}
### all growth rate close to carrying capacity
log_all = data.frame()
for(i in 26:175){
log_all= rbind(log_all, log(Ramping[seq((i-1)*8+2, i*8-1), 4:11] - mean(Ramping[seq((i-1)*8+2, i*8-1), 5], na.rm = T)))
}
log_all = log_all[-2]
rall_data = data.frame()
for(s in 1:7){
for (reps in 1:30) { # 6 reps * 5 treatments
dp = c()
for(t in 1:30){ # 35 - 5 = 30
dp = c(dp, log_all[(30*(t - 1)+reps), s])
}
rall_data = rbind(rall_data, dp)
}
}
names(rall_data) = time[6:35]
data_5 = data.frame()
for(s in 1:7){
for(i in 1:5){
r_5 = rall_data[((s-1)*30+(i-1)*6+1) :((s-1)*30+6*i),]
data_5 = rbind(data_5, r_5) # 6 replicates in 5 treatments in 7 species groups
for(reps in 1:6){
plot(time[6:35], r_5[reps,], xlab = "Day", ylab = "log(OD)",
main = paste(sp[s], "_", temp[i],"_",reps, sep = ""), type = "o")
}
}
}
# getting the highest slope as growth rate
slopes_all = data.frame(matrix(NA, nrow = nrow(data_5), ncol = 0))
for(i in 1:29){
slopes_all = cbind(slopes_all, data_5[,i+1] - data_5[,i])
}
slopes_all = slopes_all[,-seq(3,29,3)]
all_mx_gr = data.frame(matrix(NA, nrow = nrow(slopes_all), ncol = 0))
for(i in 1:10){ # 10 groups of growth rates, compare every pair for maximum
subset = cbind(slopes_all[2*(i-1)+1], slopes_all[2*i])
all_mx_gr = cbind(all_mx_gr, apply(subset, 1, max, na.rm =F))
}
pdf("../results/Ramping_gr_bytemp.pdf")
all_gr_means = data.frame()
n = 0
for(i in 1:7){
plot(1, type="n", xlab = "Day", ylab = "Growth rate",
main = sp[i], xlim = c(4,24),
ylim =c(0,1))
for(j in 1:5){
n = 5*(i-1)+j
mean_gr = colMeans(all_mx_gr[(6*(n-1)+1):(6*n),], na.rm = T)
all_gr_means = rbind(all_gr_means, mean_gr)
mean_gr[mean_gr>1] = NaN
lines(seq(5,23,2),mean_gr, col = color[j], lwd = 1, type="b", pch = 1)
}
legend("topright", temp, cex = 1, col = color, pch = 1, box.lty = 2, ncol = 3, lwd = 1)
abline(v = 13, lty = 3)
}
graphics.off()
####################### Relative abundance ###########################
ra = read.csv("../data/Ramping/Relative_abundance.csv")
ra_p = data.frame(matrix(NA, nrow = nrow(ra), ncol = 0))
for(i in 1:3){
ra_p = cbind(ra_p, ra[i*2-1]/(ra[i*2-1]+ra[i*2]), ra[i*2]/(ra[i*2-1]+ra[i*2]))
}
ra_p = cbind(ra_p, ra[7:9]/apply(ra[7:9],1,sum), ra[10:12])
d = unique(ra_p$Day)
t = unique(ra_p$temp)
ra_mean = data.frame()
for(i in 1:(length(t)-1)){
sub = rbind(ra_p[1:6,],subset(ra_p, temp == t[i+1]))
for(j in 1:length(d)){
mean = colMeans(sub[sub$Day==d[j],1:9], na.rm = T)
ra_mean = rbind(ra_mean, mean)
}
}
names(ra_mean) = colnames(ra_p)[1:9]
# sd_int = c(apply(ra[1:3,1:6], 2,sd), apply(ra[1:3, 7:9],2,sd))
ra_time = seq(0,24,2)[-12][-2]
pdf("../results/Ramping_relative_abundances.pdf")
for(i in 1:5){
# S18+W02
plot(1, type="n", xlab="Day", ylab = "%",
main = paste("S18+W02_", temp[i]), xlim = c(ra_time[1],ra_time[11]),
ylim =c(min(ra_mean[(11*(i-1)+1):(11*i),1],ra_mean[(11*(i-1)+1):(11*i),2], na.rm = T),
max(ra_mean[(11*(i-1)+1):(11*i),1],ra_mean[(11*(i-1)+1):(11*i),2], na.rm = T)))
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),1], col = "darkgreen", type="b", pch = 1)
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),2], col = "blue", type="b", pch = 1)
legend("right", c("S18", "W02"), cex = 1, col = c("darkgreen", "blue"), pch = 1,
box.lty = 3, lwd = 1)
# S18+W03
plot(1, type="n", xlab="Day", ylab = "%",
main = paste("S18+W03_", temp[i]), xlim = c(ra_time[1],ra_time[11]),
ylim =c(min(ra_mean[(11*(i-1)+1):(11*i),3],ra_mean[(11*(i-1)+1):(11*i),4], na.rm = T),
max(ra_mean[(11*(i-1)+1):(11*i),3],ra_mean[(11*(i-1)+1):(11*i),4], na.rm = T)))
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),3], col = "darkgreen", type="b", pch = 1)
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),4], col = "chocolate2", type="b", pch = 1)
legend("right", c("S18", "W03"), cex = 1, col = c("darkgreen", "chocolate2"),
pch = 1, box.lty = 3, lwd = 1)
# W02+W03
plot(1, type="n", xlab="Day", ylab = "%",
main = paste("W02+W03_", temp[i]), xlim = c(ra_time[1],ra_time[11]),
ylim =c(min(ra_mean[(11*(i-1)+1):(11*i),5],ra_mean[(11*(i-1)+1):(11*i),6], na.rm = T),
max(ra_mean[(11*(i-1)+1):(11*i),5],ra_mean[(11*(i-1)+1):(11*i),6], na.rm = T)))
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),5], col = "blue", type="b", pch = 1)
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),6], col = "chocolate2", type="b", pch = 1)
legend("right", c("W02", "W03"), cex = 1, col = c("blue", "chocolate2"), pch = 1, box.lty = 3)
# S18+W02+W03
plot(1, type="n", xlab="Day", ylab = "%",
main = paste("All_", temp[i]), xlim = c(ra_time[1],ra_time[11]),
ylim =c(min(ra_mean[(11*(i-1)+1):(11*i),7],ra_mean[(11*(i-1)+1):(11*i),8],
ra_mean[(11*(i-1)+1):(11*i),9], na.rm = T),
max(ra_mean[(11*(i-1)+1):(11*i),7],ra_mean[(11*(i-1)+1):(11*i),8],
ra_mean[(11*(i-1)+1):(11*i),9], na.rm = T)))
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),7], col = "darkgreen", type="b", pch = 1)
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),8], col = "blue", type="b", pch = 1)
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),9], col = "chocolate2", type="b", pch = 1)
legend("right", c("S18","W02", "W03"), cex = 1,
col = c("darkgreen","blue", "chocolate2"), pch = 1,
lwd = 1, box.lty = 3)
}
graphics.off()
plot(time[1:5], data[seq(j,25,5),(8-i)], main = paste(sp[i],"_",temp[j]),
xlab = "Day", ylab = "OD",
ylim =c(min(data[seq(j,25,5),(8-i)]-sd[seq(j,25,5),(8-i)]),max(data[seq(j,25,5),(8-i)]+sd[seq(j,25,5),(8-i)])),
type = "o")
i = 1
j = 1
plot(time[1:5], data[seq(j,25,5),(8-i)], main = paste(sp[i],"_",temp[j]),
xlab = "Day", ylab = "OD",
ylim =c(min(data[seq(j,25,5),(8-i)]-sd[seq(j,25,5),(8-i)]),max(data[seq(j,25,5),(8-i)]+sd[seq(j,25,5),(8-i)])),
type = "o")
######################## Initial growth ############################
pdf("../results/Ramping_initial.pdf")
for(i in 1:7){
for(j in 1:5){
if(j == 1|j == 3| j == 4){
plot(time[1:5], data[seq(j,25,5),(8-i)], main = paste(sp[i],"_",temp[j]),
xlab = "Day", ylab = "OD",
ylim =c(min(data[seq(j,25,5),(8-i)]-sd[seq(j,25,5),(8-i)]),max(data[seq(j,25,5),(8-i)]+sd[seq(j,25,5),(8-i)])),
type = "o")
arrows(x0=time[1:5], y0=data[seq(j,25,5),(8-i)]-sd[seq(j,25,5),(8-i)], x1=time[1:5], y1=data[seq(j,25,5),(8-i)]+sd[seq(j,25,5),(8-i)], code=3, angle=90, lwd=0.6, length = 0.05)
}
}
}
graphics.off()
color_by_sp = c("darkgreen", "blue", "chocolate2", "darkblue", "burlywood4", "blueviolet", "black")
pch_by_sp = c(1,1,1,2,4,5,3)
plot(1, type="n", xlab="Temps", ylab = "Growth Rate (Day)",
main = "Initial Growth Rates", xlim = c(10,30),
ylim =c(min(all_means),max(all_means)))
for(s in 1:7){
lines(c(10,20,30),all_means[(3*(s-1)+1) : (3*(s-1)+3)], col = color_by_sp[s],
pch = pch_by_sp[s] ,lwd = 1, type="b")
# arrows(x0=c(10,20,30),
#        y0=all_means[(3*(s-1)+1) : (3*(s-1)+3)] - all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        x1=c(10,20,30),
#        y1=all_means[(3*(s-1)+1) : (3*(s-1)+3)] + all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        code=3, angle=90, lwd=1, length = 0.05, col = color_by_sp[s])
}
legend("topright", sp, cex = 1, col = color_by_sp, pch = pch_by_sp, bty="n",
ncol = 2, lwd = 1, inset=c(-0.05,-0.225), xpd = T)
legend("topright", sp, cex = 1, col = color_by_sp, pch = pch_by_sp, bty="n",
ncol = 2, lwd = 1, inset=c(-0.1,-0.225), xpd = T)
legend("topright", sp, cex = 1, col = color_by_sp, pch = pch_by_sp, bty="n",
ncol = 2, lwd = 1, inset=c(-0.1,-0.2), xpd = T)
pdf("../results/Ramping_initial_gr_bytemp.pdf")
color_by_sp = c("darkgreen", "blue", "chocolate2", "darkblue", "burlywood4", "blueviolet", "black")
pch_by_sp = c(1,1,1,2,4,5,3)
plot(1, type="n", xlab="Temps", ylab = "Growth Rate (Day)",
main = "Initial Growth Rates", xlim = c(10,30),
ylim =c(min(all_means),max(all_means)))
for(s in 1:7){
lines(c(10,20,30),all_means[(3*(s-1)+1) : (3*(s-1)+3)], col = color_by_sp[s],
pch = pch_by_sp[s] ,lwd = 1, type="b")
# arrows(x0=c(10,20,30),
#        y0=all_means[(3*(s-1)+1) : (3*(s-1)+3)] - all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        x1=c(10,20,30),
#        y1=all_means[(3*(s-1)+1) : (3*(s-1)+3)] + all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        code=3, angle=90, lwd=1, length = 0.05, col = color_by_sp[s])
}
legend("topright", sp, cex = 1, col = color_by_sp, pch = pch_by_sp, bty="n",
ncol = 2, lwd = 1, inset=c(-0.1,-0.2), xpd = T)
graphics.off()
pdf("../results/Ramping_initial_gr_bytemp.pdf")
color_by_sp = c("darkgreen", "blue", "chocolate2", "darkblue", "burlywood4", "blueviolet", "black")
pch_by_sp = c(1,1,1,2,4,5,3)
plot(1, type="n", xlab="Temps", ylab = "Growth Rate (Day)",
main = "Initial Growth Rates", xlim = c(10,30),
ylim =c(min(all_means),max(all_means)))
for(s in 1:7){
lines(c(10,20,30),all_means[(3*(s-1)+1) : (3*(s-1)+3)], col = color_by_sp[s],
pch = pch_by_sp[s] ,lwd = 1, type="b")
# arrows(x0=c(10,20,30),
#        y0=all_means[(3*(s-1)+1) : (3*(s-1)+3)] - all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        x1=c(10,20,30),
#        y1=all_means[(3*(s-1)+1) : (3*(s-1)+3)] + all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        code=3, angle=90, lwd=1, length = 0.05, col = color_by_sp[s])
}
legend("topleft", sp, cex = 1, col = color_by_sp, pch = pch_by_sp, bty="n",
ncol = 2, lwd = 1, inset=c(-0.1,-0.2), xpd = T)
graphics.off()
plot(1, type="n", xlab="Temps", ylab = "Growth Rate (Day)",
main = "Initial Growth Rates", xlim = c(10,30),
ylim =c(min(all_means),max(all_means)))
for(s in 1:7){
lines(c(10,20,30),all_means[(3*(s-1)+1) : (3*(s-1)+3)], col = color_by_sp[s],
pch = pch_by_sp[s] ,lwd = 1, type="b")
# arrows(x0=c(10,20,30),
#        y0=all_means[(3*(s-1)+1) : (3*(s-1)+3)] - all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        x1=c(10,20,30),
#        y1=all_means[(3*(s-1)+1) : (3*(s-1)+3)] + all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        code=3, angle=90, lwd=1, length = 0.05, col = color_by_sp[s])
}
legend("topleft", sp, cex = 1, col = color_by_sp, pch = pch_by_sp, bty="n",
ncol = 2, lwd = 1, inset=c(-0.1,-0.15), xpd = T)
pdf("../results/Ramping_initial_gr_bytemp.pdf")
color_by_sp = c("darkgreen", "blue", "chocolate2", "darkblue", "burlywood4", "blueviolet", "black")
pch_by_sp = c(1,1,1,2,4,5,3)
plot(1, type="n", xlab="Temps", ylab = "Growth Rate (Day)",
main = "Initial Growth Rates", xlim = c(10,30),
ylim =c(min(all_means),max(all_means)))
for(s in 1:7){
lines(c(10,20,30),all_means[(3*(s-1)+1) : (3*(s-1)+3)], col = color_by_sp[s],
pch = pch_by_sp[s] ,lwd = 1, type="b")
# arrows(x0=c(10,20,30),
#        y0=all_means[(3*(s-1)+1) : (3*(s-1)+3)] - all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        x1=c(10,20,30),
#        y1=all_means[(3*(s-1)+1) : (3*(s-1)+3)] + all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        code=3, angle=90, lwd=1, length = 0.05, col = color_by_sp[s])
}
legend("topleft", sp, cex = 1, col = color_by_sp, pch = pch_by_sp, bty="n",
ncol = 2, lwd = 1, inset=c(-0.1,-0.15), xpd = T)
graphics.off()
pdf("../results/Ramping_initial_gr_bytemp.pdf")
color_by_sp = c("darkgreen", "blue", "chocolate2", "darkblue", "burlywood4", "blueviolet", "black")
pch_by_sp = c(1,1,1,2,4,5,3)
plot(1, type="n", xlab="Temps", ylab = "Growth Rate (Day)",
main = "Initial Growth Rates", xlim = c(10,30),
ylim =c(min(all_means),max(all_means)))
for(s in 1:7){
lines(c(10,20,30),all_means[(3*(s-1)+1) : (3*(s-1)+3)], col = color_by_sp[s],
pch = pch_by_sp[s] ,lwd = 1, type="b")
# arrows(x0=c(10,20,30),
#        y0=all_means[(3*(s-1)+1) : (3*(s-1)+3)] - all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        x1=c(10,20,30),
#        y1=all_means[(3*(s-1)+1) : (3*(s-1)+3)] + all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        code=3, angle=90, lwd=1, length = 0.05, col = color_by_sp[s])
}
legend("topleft", sp, cex = 1, col = color_by_sp, pch = pch_by_sp, bty="n",
ncol = 2, lwd = 1, inset=c(-0.1,-0.17), xpd = T)
graphics.off()
pdf("../results/Ramping_initial_gr_bytemp.pdf")
color_by_sp = c("darkgreen", "blue", "chocolate2", "darkblue", "burlywood4", "blueviolet", "black")
pch_by_sp = c(1,1,1,2,4,5,3)
plot(1, type="n", xlab="Temps", ylab = "Growth Rate (Day)",
main = "Initial Growth Rates", xlim = c(10,30),
ylim =c(min(all_means),max(all_means)))
for(s in 1:7){
lines(c(10,20,30),all_means[(3*(s-1)+1) : (3*(s-1)+3)], col = color_by_sp[s],
pch = pch_by_sp[s] ,lwd = 1, type="b")
# arrows(x0=c(10,20,30),
#        y0=all_means[(3*(s-1)+1) : (3*(s-1)+3)] - all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        x1=c(10,20,30),
#        y1=all_means[(3*(s-1)+1) : (3*(s-1)+3)] + all_sd[(3*(s-1)+1) : (3*(s-1)+3)],
#        code=3, angle=90, lwd=1, length = 0.05, col = color_by_sp[s])
}
legend("topleft", sp, cex = 1, col = color_by_sp, pch = pch_by_sp, bty="n",
ncol = 2, lwd = 1, inset=c(-0.12,-0.17), xpd = T)
graphics.off()
