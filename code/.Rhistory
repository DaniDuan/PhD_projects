names(ra_data[,1:9]) = names(ra_mean[,1:9])
names(ra_data_sd[,1:9]) = names(ra_mean[,1:9])
##################### relative abundance with growth OD #################
# Initial
ra_data = data[,4:10]
ra_data_sd = sd[,4:9]
ra_data = data.frame(replicate(2, ra_data[,1],simplify = F),
replicate(2, ra_data[,2],simplify = F),
replicate(2, ra_data[,3],simplify = F),
replicate(3, ra_data[,4],simplify = F),ra_data[,5:7])
ra_data_sd = data.frame(replicate(2, ra_data_sd[,1],simplify = F),
replicate(2, ra_data_sd[,2],simplify = F),
replicate(2, ra_data_sd[,3],simplify = F),
replicate(3, ra_data_sd[,4],simplify = F),ra_data[,5:7])
names(ra_data[,1:9]) = names(ra_mean[,1:9])
names(ra_data_sd[,1:9]) = names(ra_mean[,1:9])
ra_OD = data.frame()
ra_OD_sd = data.frame()
for(i in 1:length(unique(ra_mean$day))){
ra_sub = subset(ra_mean, ra_mean$day == unique(ra_mean$day)[i])
if(i<10){
sub = subset(ra_data, ra_data$sp_group == (3*(i -1)+1)|ra_data$sp_group == (3*i-1)|ra_data$sp_group == (3*i))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group == (3*(i -1)+1)|ra_data_sd$sp_group == (3*i-1)|ra_data_sd$sp_group == (3*i))
rep_sub = do.call("rbind",replicate(3, ra_sub,simplify = F))
}
else{
sub = subset(ra_data, ra_data$sp_group == (4*(i -3))|ra_data$sp_group == (4*(i -3)+1)|ra_data$sp_group == (4*(i -3)+2)|ra_data$sp_group == (4*(i -3)+3))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group ==  (4*(i -3))|ra_data_sd$sp_group == (4*(i -3)+1)|ra_data_sd$sp_group == (4*(i -3)+2)|ra_data_sd$sp_group == (4*(i -3)+3))
rep_sub = do.call("rbind",replicate(4, ra_sub,simplify = F))
}
ra_OD = rbind(ra_OD, sub[,1:9]*rep_sub[1:9])
ra_OD_sd = rbind(ra_OD_sd, sub_sd[,1:9]*rep_sub[1:9])
}
##################### relative abundance with growth OD #################
# Initial
ra_data = data[,4:10]
ra_data_sd = sd[,4:9]
ra_data = data.frame(replicate(2, ra_data[,1],simplify = F),
replicate(2, ra_data[,2],simplify = F),
replicate(2, ra_data[,3],simplify = F),
replicate(3, ra_data[,4],simplify = F),ra_data[,5:7])
ra_data_sd = data.frame(replicate(2, ra_data_sd[,1],simplify = F),
replicate(2, ra_data_sd[,2],simplify = F),
replicate(2, ra_data_sd[,3],simplify = F),
replicate(3, ra_data_sd[,4],simplify = F),ra_data[,5:7])
names(ra_data[,1:9]) = names(ra_mean[,1:9])
names(ra_data_sd[,1:9]) = names(ra_mean[,1:9])
ra_OD = data.frame()
ra_OD_sd = data.frame()
for(i in 1:length(unique(ra_mean$day))){
ra_sub = subset(ra_mean, ra_mean$day == unique(ra_mean$day)[i])
if(i<10){
sub = subset(ra_data, ra_data$sp_group == (3*(i -1)+1)|ra_data$sp_group == (3*i-1)|ra_data$sp_group == (3*i))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group == (3*(i -1)+1)|ra_data_sd$sp_group == (3*i-1)|ra_data_sd$sp_group == (3*i))
rep_sub = do.call("rbind",replicate(3, ra_sub,simplify = F))
}
else{
sub = subset(ra_data, ra_data$sp_group == (4*(i -3))|ra_data$sp_group == (4*(i -3)+1)|ra_data$sp_group == (4*(i -3)+2)|ra_data$sp_group == (4*(i -3)+3))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group ==  (4*(i -3))|ra_data_sd$sp_group == (4*(i -3)+1)|ra_data_sd$sp_group == (4*(i -3)+2)|ra_data_sd$sp_group == (4*(i -3)+3))
rep_sub = do.call("rbind",replicate(4, ra_sub,simplify = F))
}
ra_OD = rbind(ra_OD, sub[,1:9]*rep_sub[1:9])
ra_OD_sd = rbind(ra_OD_sd, sub_sd[,1:9]*rep_sub[1:9])
}
View(sub_sd[,1:9])
View(sub_sd)
ra_data_sd = data.frame(replicate(2, ra_data_sd[,1],simplify = F),
replicate(2, ra_data_sd[,2],simplify = F),
replicate(2, ra_data_sd[,3],simplify = F),
replicate(3, ra_data_sd[,4],simplify = F),ra_data[,5:7])
ra_data[,5:7]
data[,4:10]
ra_data_sd = data.frame(replicate(2, ra_data_sd[,1],simplify = F),
replicate(2, ra_data_sd[,2],simplify = F),
replicate(2, ra_data_sd[,3],simplify = F),
replicate(3, ra_data_sd[,4],simplify = F),data[,8:10])
##################### relative abundance with growth OD #################
# Initial
ra_data = data[,4:10]
ra_data_sd = sd[,4:9]
ra_data = data.frame(replicate(2, ra_data[,1],simplify = F),
replicate(2, ra_data[,2],simplify = F),
replicate(2, ra_data[,3],simplify = F),
replicate(3, ra_data[,4],simplify = F),data[,8:10])
ra_data_sd = data.frame(replicate(2, ra_data_sd[,1],simplify = F),
replicate(2, ra_data_sd[,2],simplify = F),
replicate(2, ra_data_sd[,3],simplify = F),
replicate(3, ra_data_sd[,4],simplify = F),data[,8:10])
names(ra_data[,1:9]) = names(ra_mean[,1:9])
names(ra_data_sd[,1:9]) = names(ra_mean[,1:9])
ra_OD = data.frame()
ra_OD_sd = data.frame()
for(i in 1:length(unique(ra_mean$day))){
ra_sub = subset(ra_mean, ra_mean$day == unique(ra_mean$day)[i])
if(i<10){
sub = subset(ra_data, ra_data$sp_group == (3*(i -1)+1)|ra_data$sp_group == (3*i-1)|ra_data$sp_group == (3*i))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group == (3*(i -1)+1)|ra_data_sd$sp_group == (3*i-1)|ra_data_sd$sp_group == (3*i))
rep_sub = do.call("rbind",replicate(3, ra_sub,simplify = F))
}
else{
sub = subset(ra_data, ra_data$sp_group == (4*(i -3))|ra_data$sp_group == (4*(i -3)+1)|ra_data$sp_group == (4*(i -3)+2)|ra_data$sp_group == (4*(i -3)+3))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group ==  (4*(i -3))|ra_data_sd$sp_group == (4*(i -3)+1)|ra_data_sd$sp_group == (4*(i -3)+2)|ra_data_sd$sp_group == (4*(i -3)+3))
rep_sub = do.call("rbind",replicate(4, ra_sub,simplify = F))
}
ra_OD = rbind(ra_OD, sub[,1:9]*rep_sub[1:9])
ra_OD_sd = rbind(ra_OD_sd, sub_sd[,1:9]*rep_sub[1:9])
}
names(ra_OD) = names(ra_mean[,1:9])
names(ra_OD_sd) = names(ra_mean[,1:9])
ra_OD = cbind(ra_OD, data[,8:10])
ra_OD_sd = cbind(ra_OD_sd, data[,8:10])
names(ra_data[,1:9]) = names(ra_mean[,1:9])
names(ra_OD) = names(ra_mean[,1:9])
ra_OD = data.frame()
ra_OD_sd = data.frame()
for(i in 1:length(unique(ra_mean$day))){
ra_sub = subset(ra_mean, ra_mean$day == unique(ra_mean$day)[i])
if(i<10){
sub = subset(ra_data, ra_data$sp_group == (3*(i -1)+1)|ra_data$sp_group == (3*i-1)|ra_data$sp_group == (3*i))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group == (3*(i -1)+1)|ra_data_sd$sp_group == (3*i-1)|ra_data_sd$sp_group == (3*i))
rep_sub = do.call("rbind",replicate(3, ra_sub,simplify = F))
}
else{
sub = subset(ra_data, ra_data$sp_group == (4*(i -3))|ra_data$sp_group == (4*(i -3)+1)|ra_data$sp_group == (4*(i -3)+2)|ra_data$sp_group == (4*(i -3)+3))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group ==  (4*(i -3))|ra_data_sd$sp_group == (4*(i -3)+1)|ra_data_sd$sp_group == (4*(i -3)+2)|ra_data_sd$sp_group == (4*(i -3)+3))
rep_sub = do.call("rbind",replicate(4, ra_sub,simplify = F))
}
ra_OD = rbind(ra_OD, sub[,1:9]*rep_sub[1:9])
ra_OD_sd = rbind(ra_OD_sd, sub_sd[,1:9]*rep_sub[1:9])
}
names(ra_OD) = names(ra_mean[,1:9])
names(ra_OD_sd) = names(ra_mean[,1:9])
ra_OD = cbind(ra_OD, data[,8:10])
ra_OD_sd = cbind(ra_OD_sd, data[,8:10])
length(temp)
View(  ra_OD[seq(i,175,5),])
ra_OD[seq((i-1),175,5),]
View(  ra_OD[seq(i,175,5),]
)
seq(i,175,5)
i = 1
View(  ra_OD[seq(i,175,5),]
)
1:length(unique(sp_ra))
sp_ra
sp_ra_v
j = 1
sp_ra_v
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
sp_ra_v
sub = ra_OD[seq(i,175,5),sp_ra_v]
View(sub)
sub = ra_OD[seq(i,175,5),]
View(sub)
sub = ra_OD[seq(i,175,5),sp_ra_v]
sp_ra_v[1]
ra_time
sub[,sp_ra_v[1]]
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
sub = ra_OD[seq(i,175,5),sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "%",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min(sub, na.rm = T), max(sub, na.rm = T)))
lines(time,sub[,sp_ra_v[1]], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,sp_ra_v[2]], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,sp_ra_v[3]], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("right", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
sub[,sp_ra_v[2]]
sub
sp_ra_v[2]
sp_ra_v
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
sub = ra_OD[seq(i,175,5),sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "%",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min(sub, na.rm = T), max(sub, na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("right", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
sub = ra_OD[seq(i,175,5),sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "%",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min(sub, na.rm = T), max(sub, na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
graphics.off()
temp
i = 4
View(ra_OD[seq(i,175,5),])
View(ra_mean[temp == "30C"])
ra_mean
####################### Relative abundance ###########################
ra = read.csv("../data/Ramping/Relative_abundance.csv")
ra_p = data.frame(matrix(NA, nrow = nrow(ra), ncol = 0))
for(i in 1:3){
ra_p = cbind(ra_p, ra[i*2-1]/(ra[i*2-1]+ra[i*2]), ra[i*2]/(ra[i*2-1]+ra[i*2]))
}
ra_p = cbind(ra_p, ra[7:9]/apply(ra[7:9],1,sum), ra[10:12])
d = unique(ra_p$Day)
t = unique(ra_p$temp)
ra_mean = data.frame()
for(i in 1:(length(t)-1)){
sub = rbind(ra_p[1:6,],subset(ra_p, temp == t[i+1]))
for(j in 1:length(d)){
mean = colMeans(sub[sub$Day==d[j],1:9], na.rm = T)
ra_mean = rbind(ra_mean, mean)
}
}
names(ra_mean) = colnames(ra_p)[1:9]
# sd_int = c(apply(ra[1:3,1:6], 2,sd), apply(ra[1:3, 7:9],2,sd))
ra_time = seq(0,24,2)[-12][-2]
ra_mean$day = sort(rep(ra_time, 5))
ra_mean$temp = rep(temp,11)
sp_ra = c(sp[sort(rep(4:7,2))],sp[7])
spinside = c("S18", "W02", "S18", "W03", "W02", "W03", "S18", "W02", "W03")
colors_ra = c("darkgreen", "blue", "darkgreen", "chocolate2", "blue", "chocolate2", "darkgreen", "blue", "chocolate2")
pdf("../results/Ramping_relative_abundances.pdf")
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
plot(1, type="n", xlab="Day", ylab = "%",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""), xlim = c(ra_time[1],ra_time[11]),
ylim =c(min(ra_mean[(11*(i-1)+1):(11*i),sp_ra_v], na.rm = T),
max(ra_mean[(11*(i-1)+1):(11*i),sp_ra_v], na.rm = T)))
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),sp_ra_v[1]], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),sp_ra_v[2]], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),sp_ra_v[3]], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("right", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
graphics.off()
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
plot(1, type="n", xlab="Day", ylab = "%",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""), xlim = c(ra_time[1],ra_time[11]),
ylim =c(min(ra_mean[(11*(i-1)+1):(11*i),sp_ra_v], na.rm = T),
max(ra_mean[(11*(i-1)+1):(11*i),sp_ra_v], na.rm = T)))
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),sp_ra_v[1]], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),sp_ra_v[2]], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),sp_ra_v[3]], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("right", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
View(ra_mean[temp == "30C"])
View(ra_mean[seq(4,175,5)])
View(ra_mean[seq(4,175,5),])
seq(4,175,5)
View(ra_mean[seq(4,55,5),])
ra
View(ra[temp == 30])
View(ra[temp == "30"])
View(ra)
(11*(i-1)+1):(11*i)
i = 1
i = 4
(11*(i-1)+1):(11*i)
i = 1
sub = rbind(ra_p[1:6,],subset(ra_p, temp == t[i+1]))
View(sub)
View(ra_p)
####################### Relative abundance ###########################
ra = read.csv("../data/Ramping/Relative_abundance.csv")
ra_p = data.frame(matrix(NA, nrow = nrow(ra), ncol = 0))
for(i in 1:3){
ra_p = cbind(ra_p, ra[i*2-1]/(ra[i*2-1]+ra[i*2]), ra[i*2]/(ra[i*2-1]+ra[i*2]))
}
ra_p = cbind(ra_p, ra[7:9]/apply(ra[7:9],1,sum), ra[10:12])
d = unique(ra_p$Day)
t = unique(ra_p$temp)
ra_mean = data.frame()
for(i in 1:(length(t)-1)){
sub = rbind(ra_p[1:6,],subset(ra_p, temp == t[i+1]))
for(j in 1:length(d)){
mean = colMeans(sub[sub$Day==d[j],1:9], na.rm = T)
ra_mean = rbind(ra_mean, mean)
}
}
names(ra_mean) = colnames(ra_p)[1:9]
# sd_int = c(apply(ra[1:3,1:6], 2,sd), apply(ra[1:3, 7:9],2,sd))
ra_time = seq(0,24,2)[-12][-2]
ra_mean$day = sort(rep(ra_time, 5))
ra_mean$temp = rep(temp,11)
sp_ra = c(sp[sort(rep(4:7,2))],sp[7])
spinside = c("S18", "W02", "S18", "W03", "W02", "W03", "S18", "W02", "W03")
colors_ra = c("darkgreen", "blue", "darkgreen", "chocolate2", "blue", "chocolate2", "darkgreen", "blue", "chocolate2")
length(d)
d[j]
sub[sub$Day==d[j],1:9]
colMeans(sub[sub$Day==d[j],1:9], na.rm = T)
j
d[j]
j = 2
sub[sub$Day==d[j],1:9]
ra_mean = data.frame()
for(i in 1:(length(t)-1)){
sub = rbind(ra_p[1:6,],subset(ra_p, temp == t[i+1]))
for(j in 1:length(d)){
mean = colMeans(sub[sub$Day==d[j],1:9], na.rm = T)
ra_mean = rbind(ra_mean, mean)
}
}
names(ra_mean) = colnames(ra_p)[1:9]
# sd_int = c(apply(ra[1:3,1:6], 2,sd), apply(ra[1:3, 7:9],2,sd))
ra_time = seq(0,24,2)[-12][-2]
ra_mean$day = sort(rep(ra_time, 5))
ra_mean$temp = rep(temp,11)
View(ra)
1:(length(t)-1)
i = 4
sub = rbind(ra_p[1:6,],subset(ra_p, temp == t[i+1]))
for(j in 1:length(d)){
mean = colMeans(sub[sub$Day==d[j],1:9], na.rm = T)
ra_mean = rbind(ra_mean, mean)
}
ra_mean = data.frame()
for(j in 1:length(d)){
mean = colMeans(sub[sub$Day==d[j],1:9], na.rm = T)
ra_mean = rbind(ra_mean, mean)
}
ra_mean = data.frame()
sub[sub$Day==d[j],1:9]
mean
for(j in 1:length(d)){
mean = colMeans(sub[sub$Day==d[j],1:9], na.rm = T)
print(d[j])
ra_mean = rbind(ra_mean, mean)
}
rep(temp,11)
rep(ra_time, 5)
ra_mean = data.frame()
for(i in 1:(length(t)-1)){
sub = rbind(ra_p[1:6,],subset(ra_p, temp == t[i+1]))
for(j in 1:length(d)){
mean = colMeans(sub[sub$Day==d[j],1:9], na.rm = T)
print(d[j])
ra_mean = rbind(ra_mean, mean)
}
}
names(ra_mean) = colnames(ra_p)[1:9]
# sd_int = c(apply(ra[1:3,1:6], 2,sd), apply(ra[1:3, 7:9],2,sd))
ra_time = seq(0,24,2)[-12][-2]
ra_mean$day = sort(rep(ra_time, 5))
ra_mean$temp = rep(temp,11)
rep(temp,11)
rep(ra_time, 5)
rep(ra_time, 5)
ra_mean$day = rep(ra_time, 5)
temp
rep(1:5,11)
sort(rep(1:5,11))
temp[sort(rep(1:5,11))]
ra_mean$temp = temp[sort(rep(1:5,11))]
sp_ra = c(sp[sort(rep(4:7,2))],sp[7])
spinside = c("S18", "W02", "S18", "W03", "W02", "W03", "S18", "W02", "W03")
colors_ra = c("darkgreen", "blue", "darkgreen", "chocolate2", "blue", "chocolate2", "darkgreen", "blue", "chocolate2")
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
plot(1, type="n", xlab="Day", ylab = "%",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""), xlim = c(ra_time[1],ra_time[11]),
ylim =c(min(ra_mean[(11*(i-1)+1):(11*i),sp_ra_v], na.rm = T),
max(ra_mean[(11*(i-1)+1):(11*i),sp_ra_v], na.rm = T)))
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),sp_ra_v[1]], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),sp_ra_v[2]], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(ra_time,ra_mean[(11*(i-1)+1):(11*i),sp_ra_v[3]], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("right", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
##################### relative abundance with growth OD #################
# Initial
ra_data = data[,4:10]
ra_data_sd = sd[,4:9]
ra_data = data.frame(replicate(2, ra_data[,1],simplify = F),
replicate(2, ra_data[,2],simplify = F),
replicate(2, ra_data[,3],simplify = F),
replicate(3, ra_data[,4],simplify = F),data[,8:10])
ra_data_sd = data.frame(replicate(2, ra_data_sd[,1],simplify = F),
replicate(2, ra_data_sd[,2],simplify = F),
replicate(2, ra_data_sd[,3],simplify = F),
replicate(3, ra_data_sd[,4],simplify = F),data[,8:10])
ra_OD = data.frame()
ra_OD_sd = data.frame()
for(i in 1:length(unique(ra_mean$day))){
ra_sub = subset(ra_mean, ra_mean$day == unique(ra_mean$day)[i])
if(i<10){
sub = subset(ra_data, ra_data$sp_group == (3*(i -1)+1)|ra_data$sp_group == (3*i-1)|ra_data$sp_group == (3*i))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group == (3*(i -1)+1)|ra_data_sd$sp_group == (3*i-1)|ra_data_sd$sp_group == (3*i))
rep_sub = do.call("rbind",replicate(3, ra_sub,simplify = F))
}
else{
sub = subset(ra_data, ra_data$sp_group == (4*(i -3))|ra_data$sp_group == (4*(i -3)+1)|ra_data$sp_group == (4*(i -3)+2)|ra_data$sp_group == (4*(i -3)+3))
sub_sd = subset(ra_data_sd, ra_data_sd$sp_group ==  (4*(i -3))|ra_data_sd$sp_group == (4*(i -3)+1)|ra_data_sd$sp_group == (4*(i -3)+2)|ra_data_sd$sp_group == (4*(i -3)+3))
rep_sub = do.call("rbind",replicate(4, ra_sub,simplify = F))
}
ra_OD = rbind(ra_OD, sub[,1:9]*rep_sub[1:9])
ra_OD_sd = rbind(ra_OD_sd, sub_sd[,1:9]*rep_sub[1:9])
}
names(ra_OD) = names(ra_mean[,1:9])
names(ra_OD_sd) = names(ra_mean[,1:9])
ra_OD = cbind(ra_OD, data[,8:10])
ra_OD_sd = cbind(ra_OD_sd, data[,8:10])
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
sub = ra_OD[seq(i,175,5),sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "%",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min(sub, na.rm = T), max(sub, na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
graphics.off()
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
sub = ra_OD[seq(i,175,5),sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min(sub, na.rm = T), max(sub, na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
pdf("../results/ra_OD_bytemp.pdf")
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
sub = ra_OD[seq(i,175,5),sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min(sub, na.rm = T), max(sub, na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
graphics.off()
pdf("../results/ra_OD.pdf")
for(i in 1:length(temp)){
for(j in 1:length(unique(sp_ra))){
sp_ra_v = which(sp_ra == unique(sp_ra)[j])
sub = ra_OD[seq(i,175,5),sp_ra_v]
plot(1, type="n", xlab="Day", ylab = "OD",
main = paste(unique(sp_ra)[j],"_", temp[i],sep=""),
xlim = c(time[1],time[length(time)]),
ylim =c(min(sub, na.rm = T), max(sub, na.rm = T)))
lines(time,sub[,1], col = colors_ra[sp_ra_v][1], type="b", pch = 1)
lines(time,sub[,2], col = colors_ra[sp_ra_v][2], type="b", pch = 1)
if(length(sp_ra_v) == 3){
lines(time,sub[,3], col = colors_ra[sp_ra_v][3], type="b", pch = 1)
}
legend("topright", spinside[sp_ra_v], cex = 1, col = colors_ra[sp_ra_v], pch = 1,
box.lty = 3, lwd = 1)
}
}
graphics.off()
